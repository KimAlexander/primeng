{"version":3,"file":"primeng-organizationchart.js","sources":["ng://primeng/organizationchart/organizationchart.ts","ng://primeng/organizationchart/primeng-organizationchart.ts"],"sourcesContent":["import {NgModule,Component,ElementRef,Input,Output,AfterContentInit,EventEmitter,TemplateRef,\r\n        Inject,forwardRef,ContentChildren,QueryList,ChangeDetectionStrategy} from '@angular/core';\r\nimport {trigger,state,style,transition,animate} from '@angular/animations';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from 'primeng/api';\r\nimport {TreeNode} from 'primeng/api';\r\nimport {PrimeTemplate} from 'primeng/api';\r\n\r\n@Component({\r\n    selector: '[pOrganizationChartNode]',\r\n    template: `\r\n        <tr *ngIf=\"node\">\r\n            <td [attr.colspan]=\"colspan\">\r\n                <div class=\"ui-organizationchart-node-content ui-widget-content ui-corner-all {{node.styleClass}}\" \r\n                    [ngClass]=\"{'ui-organizationchart-selectable-node': chart.selectionMode && node.selectable !== false,'ui-state-highlight':isSelected()}\"\r\n                    (click)=\"onNodeClick($event,node)\">\r\n                    <div *ngIf=\"!chart.getTemplateForNode(node)\">{{node.label}}</div>\r\n                    <div *ngIf=\"chart.getTemplateForNode(node)\">\r\n                        <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: {$implicit: node}\"></ng-container>\r\n                    </div>\r\n                    <a *ngIf=\"!leaf\" tabindex=\"0\" class=\"ui-node-toggler\" (click)=\"toggleNode($event, node)\" (keydown.enter)=\"toggleNode($event, node)\">\r\n                        <i class=\"ui-node-toggler-icon pi\" [ngClass]=\"{'pi-chevron-down': node.expanded, 'pi-chevron-up': !node.expanded}\"></i>\r\n                    </a>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        <tr [ngClass]=\"!leaf&&node.expanded ? 'ui-organizationchart-node-visible' : 'ui-organizationchart-node-hidden'\" class=\"ui-organizationchart-lines\" [@childState]=\"'in'\">\r\n            <td [attr.colspan]=\"colspan\">\r\n                <div class=\"ui-organizationchart-line-down\"></div>\r\n            </td>\r\n        </tr>\r\n        <tr [ngClass]=\"!leaf&&node.expanded ? 'ui-organizationchart-node-visible' : 'ui-organizationchart-node-hidden'\" class=\"ui-organizationchart-lines\" [@childState]=\"'in'\">\r\n            <ng-container *ngIf=\"node.children && node.children.length === 1\">\r\n                <td [attr.colspan]=\"colspan\">\r\n                    <div class=\"ui-organizationchart-line-down\"></div>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"node.children && node.children.length > 1\">\r\n                <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\r\n                    <td class=\"ui-organizationchart-line-left\" [ngClass]=\"{'ui-organizationchart-line-top':!first}\">&nbsp;</td>\r\n                    <td class=\"ui-organizationchart-line-right\" [ngClass]=\"{'ui-organizationchart-line-top':!last}\">&nbsp;</td>\r\n                </ng-template>\r\n            </ng-container>\r\n        </tr>\r\n        <tr [ngClass]=\"!leaf&&node.expanded ? 'ui-organizationchart-node-visible' : 'ui-organizationchart-node-hidden'\" class=\"ui-organizationchart-nodes\" [@childState]=\"'in'\">\r\n            <td *ngFor=\"let child of node.children\" colspan=\"2\">\r\n                <table class=\"ui-organizationchart-table\" pOrganizationChartNode [node]=\"child\"></table>\r\n            </td>\r\n        </tr>\r\n    `,\r\n    animations: [\r\n        trigger('childState', [\r\n            state('in', style({opacity: 1})),\r\n           transition('void => *', [\r\n             style({opacity: 0}),\r\n             animate(150)\r\n           ]),\r\n           transition('* => void', [\r\n             animate(150, style({opacity:0}))\r\n           ])\r\n        ])\r\n    ]\r\n})\r\nexport class OrganizationChartNode {\r\n\r\n    @Input() node: TreeNode;\r\n        \r\n    @Input() root: boolean;\r\n    \r\n    @Input() first: boolean;\r\n    \r\n    @Input() last: boolean;\r\n\r\n    chart: OrganizationChart;\r\n        \r\n    constructor(@Inject(forwardRef(() => OrganizationChart)) chart) {\r\n        this.chart = chart as OrganizationChart;\r\n    }\r\n                \r\n    get leaf(): boolean {\r\n        return this.node.leaf == false ? false : !(this.node.children&&this.node.children.length);\r\n    }\r\n    \r\n    get colspan() {\r\n        return (this.node.children && this.node.children.length) ? this.node.children.length * 2: null;\r\n    }\r\n    \r\n    onNodeClick(event: Event, node: TreeNode) {\r\n        this.chart.onNodeClick(event, node)\r\n    }\r\n    \r\n    toggleNode(event: Event, node: TreeNode) {\r\n        node.expanded = !node.expanded;\r\n        if (node.expanded)\r\n            this.chart.onNodeExpand.emit({originalEvent: event, node: this.node});\r\n        else\r\n            this.chart.onNodeCollapse.emit({originalEvent: event, node: this.node});\r\n            \r\n        event.preventDefault();\r\n    }\r\n    \r\n    isSelected() {\r\n        return this.chart.isSelected(this.node);\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-organizationChart',\r\n    template: `\r\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'ui-organizationchart ui-widget': true, 'ui-organizationchart-preservespace': preserveSpace}\">\r\n            <table class=\"ui-organizationchart-table\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class OrganizationChart implements AfterContentInit {\r\n            \r\n    @Input() value: TreeNode[];            \r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n    \r\n    @Input() selectionMode: string;\r\n    \r\n    @Input() selection: any;\r\n\r\n    @Input() preserveSpace: boolean = true;\r\n    \r\n    @Output() selectionChange: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onNodeSelect: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onNodeUnselect: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onNodeExpand: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onNodeCollapse: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n    \r\n    public templateMap: any;\r\n    \r\n    constructor(public el: ElementRef) {}\r\n    \r\n    get root(): TreeNode {\r\n        return this.value && this.value.length ? this.value[0] : null;\r\n    }\r\n    \r\n    ngAfterContentInit() {\r\n        if (this.templates.length) {\r\n            this.templateMap = {};\r\n        }\r\n        \r\n        this.templates.forEach((item) => {\r\n            this.templateMap[item.getType()] = item.template;\r\n        });\r\n    }\r\n    \r\n    getTemplateForNode(node: TreeNode): TemplateRef<any> {\r\n        if (this.templateMap)\r\n            return node.type ? this.templateMap[node.type] : this.templateMap['default'];\r\n        else\r\n            return null;\r\n    }\r\n    \r\n    onNodeClick(event: Event, node: TreeNode) {\r\n        let eventTarget = (<Element> event.target);\r\n        \r\n        if (eventTarget.className && (eventTarget.className.indexOf('ui-node-toggler') !== -1 ||Â eventTarget.className.indexOf('ui-node-toggler-icon') !== -1)) {\r\n            return;\r\n        }\r\n        else if (this.selectionMode) {\r\n            if (node.selectable === false) {\r\n                return;\r\n            }\r\n            \r\n            let index = this.findIndexInSelection(node);\r\n            let selected = (index >= 0);\r\n            \r\n            if (this.selectionMode === 'single') {\r\n                if (selected) {\r\n                    this.selection = null;\r\n                    this.onNodeUnselect.emit({originalEvent: event, node: node});\r\n                }\r\n                else {\r\n                    this.selection = node;\r\n                    this.onNodeSelect.emit({originalEvent: event, node: node});\r\n                }\r\n            }\r\n            else if (this.selectionMode === 'multiple') {\r\n                if (selected) {\r\n                    this.selection = this.selection.filter((val,i) => i!=index);\r\n                    this.onNodeUnselect.emit({originalEvent: event, node: node});\r\n                }\r\n                else {\r\n                    this.selection = [...this.selection||[],node];\r\n                    this.onNodeSelect.emit({originalEvent: event, node: node});\r\n                }\r\n            }\r\n            \r\n            this.selectionChange.emit(this.selection);\r\n        }\r\n    }\r\n    \r\n    findIndexInSelection(node: TreeNode) {\r\n        let index: number = -1;\r\n\r\n        if (this.selectionMode && this.selection) {\r\n            if (this.selectionMode === 'single') {\r\n                index = (this.selection == node) ? 0 : - 1;\r\n            }\r\n            else if (this.selectionMode === 'multiple') {\r\n                for(let i = 0; i  < this.selection.length; i++) {\r\n                    if (this.selection[i] == node) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n    \r\n    isSelected(node: TreeNode) {\r\n        return this.findIndexInSelection(node) != -1;         \r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [OrganizationChart,SharedModule],\r\n    declarations: [OrganizationChart,OrganizationChartNode]\r\n})\r\nexport class OrganizationChartModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}