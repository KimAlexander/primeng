{"version":3,"file":"primeng-paginator.js","sources":["ng://primeng/paginator/paginator.ts","ng://primeng/paginator/primeng-paginator.ts"],"sourcesContent":["import {NgModule,Component,OnInit,Input,Output,ChangeDetectorRef,EventEmitter,TemplateRef,OnChanges,SimpleChanges,ChangeDetectionStrategy} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {SelectItem} from 'primeng/api';\r\nimport {SharedModule} from 'primeng/api';\r\n\r\n@Component({\r\n    selector: 'p-paginator',\r\n    template: `\r\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'ui-paginator ui-widget ui-widget-header ui-unselectable-text ui-helper-clearfix'\"\r\n            *ngIf=\"alwaysShow ? true : (pageLinks && pageLinks.length > 1)\">\r\n            <div class=\"ui-paginator-left-content\" *ngIf=\"templateLeft\">\r\n                <ng-container *ngTemplateOutlet=\"templateLeft; context: {$implicit: paginatorState}\"></ng-container>\r\n            </div>\r\n            <span class=\"ui-paginator-current\" *ngIf=\"showCurrentPageReport\">{{currentPageReport}}</span>\r\n            <a [attr.tabindex]=\"isFirstPage() ? null : '0'\" class=\"ui-paginator-first ui-paginator-element ui-state-default ui-corner-all\"\r\n                    (click)=\"changePageToFirst($event)\" (keydown.enter)=\"changePageToFirst($event)\" [ngClass]=\"{'ui-state-disabled':isFirstPage()}\" [tabindex]=\"isFirstPage() ? -1 : null\">\r\n                <span class=\"ui-paginator-icon pi pi-step-backward\"></span>\r\n            </a>\r\n            <a tabindex=\"0\" [attr.tabindex]=\"isFirstPage() ? null : '0'\" class=\"ui-paginator-prev ui-paginator-element ui-state-default ui-corner-all\"\r\n                    (click)=\"changePageToPrev($event)\" (keydown.enter)=\"changePageToPrev($event)\" [ngClass]=\"{'ui-state-disabled':isFirstPage()}\" [tabindex]=\"isFirstPage() ? -1 : null\">\r\n                <span class=\"ui-paginator-icon pi pi-caret-left\"></span>\r\n            </a>\r\n            <span class=\"ui-paginator-pages\">\r\n                <a tabindex=\"0\" *ngFor=\"let pageLink of pageLinks\" class=\"ui-paginator-page ui-paginator-element ui-state-default ui-corner-all\"\r\n                    (click)=\"onPageLinkClick($event, pageLink - 1)\" (keydown.enter)=\"onPageLinkClick($event, pageLink - 1)\" [ngClass]=\"{'ui-state-active': (pageLink-1 == getPage())}\">{{pageLink}}</a>\r\n            </span>\r\n            <a [attr.tabindex]=\"isLastPage() ? null : '0'\" class=\"ui-paginator-next ui-paginator-element ui-state-default ui-corner-all\"\r\n                    (click)=\"changePageToNext($event)\" (keydown.enter)=\"changePageToNext($event)\" [ngClass]=\"{'ui-state-disabled':isLastPage()}\" [tabindex]=\"isLastPage() ? -1 : null\">\r\n                <span class=\"ui-paginator-icon pi pi-caret-right\"></span>\r\n            </a>\r\n            <a [attr.tabindex]=\"isLastPage() ? null : '0'\" class=\"ui-paginator-last ui-paginator-element ui-state-default ui-corner-all\"\r\n                    (click)=\"changePageToLast($event)\" (keydown.enter)=\"changePageToLast($event)\" [ngClass]=\"{'ui-state-disabled':isLastPage()}\" [tabindex]=\"isLastPage() ? -1 : null\">\r\n                <span class=\"ui-paginator-icon pi pi-step-forward\"></span>\r\n            </a>\r\n            <p-dropdown [options]=\"rowsPerPageItems\" [(ngModel)]=\"rows\" *ngIf=\"rowsPerPageOptions\" \r\n                (onChange)=\"onRppChange($event)\" [appendTo]=\"dropdownAppendTo\" [scrollHeight]=\"dropdownScrollHeight\"></p-dropdown>\r\n            <div class=\"ui-paginator-right-content\" *ngIf=\"templateRight\">\r\n                <ng-container *ngTemplateOutlet=\"templateRight; context: {$implicit: paginatorState}\"></ng-container>\r\n            </div>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class Paginator implements OnInit, OnChanges {\r\n\r\n    @Input() pageLinkSize: number = 5;\r\n\r\n    @Output() onPageChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() alwaysShow: boolean = true;\r\n    \r\n    @Input() templateLeft: TemplateRef<any>;\r\n    \r\n    @Input() templateRight: TemplateRef<any>;\r\n\r\n    @Input() dropdownAppendTo: any;\r\n\r\n    @Input() dropdownScrollHeight: string = '200px';\r\n\r\n    @Input() currentPageReportTemplate: string = '{currentPage} of {totalPages}';\r\n\r\n    @Input() showCurrentPageReport: boolean;\r\n\r\n    @Input() totalRecords: number = 0;\r\n\r\n    @Input() rows: number = 0;\r\n    \r\n    @Input() rowsPerPageOptions: any[];\r\n\r\n    pageLinks: number[];\r\n\r\n    rowsPerPageItems: SelectItem[];\r\n    \r\n    paginatorState: any;\r\n\r\n    _first: number = 0;\r\n\r\n    constructor(private cd: ChangeDetectorRef) {}\r\n    \r\n    ngOnInit() {\r\n        this.updatePaginatorState();\r\n    }\r\n\r\n    ngOnChanges(simpleChange: SimpleChanges) {\r\n        if (simpleChange.totalRecords) {\r\n            this.updatePageLinks();\r\n            this.updatePaginatorState();\r\n            this.updateFirst();\r\n            this.updateRowsPerPageOptions();\r\n        }\r\n\r\n        if (simpleChange.first) {\r\n            this._first = simpleChange.first.currentValue;\r\n            this.updatePageLinks();\r\n            this.updatePaginatorState();\r\n        }\r\n\r\n        if (simpleChange.rows) {\r\n            this.updatePageLinks();\r\n            this.updatePaginatorState();\r\n        }\r\n\r\n        if (simpleChange.rowsPerPageOptions) {\r\n            this.updateRowsPerPageOptions();\r\n        }\r\n    }\r\n\r\n    @Input() get first(): number {\r\n        return this._first;\r\n    }\r\n    set first(val:number) {\r\n        this._first = val;\r\n    }\r\n\r\n    updateRowsPerPageOptions() {\r\n        if (this.rowsPerPageOptions) {\r\n            this.rowsPerPageItems = [];\r\n            for (let opt of this.rowsPerPageOptions) {\r\n                if (typeof opt == 'object' && opt['showAll']) {\r\n                    this.rowsPerPageItems.unshift({label: opt['showAll'], value: this.totalRecords});\r\n                }\r\n                else {\r\n                    this.rowsPerPageItems.push({label: String(opt), value: opt});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isFirstPage() {\r\n        return this.getPage() === 0;\r\n    }\r\n\r\n    isLastPage() {\r\n        return this.getPage() === this.getPageCount() - 1;\r\n    }\r\n\r\n    getPageCount() {\r\n        return Math.ceil(this.totalRecords/this.rows)||1;\r\n    }\r\n\r\n    calculatePageLinkBoundaries() {\r\n        let numberOfPages = this.getPageCount(),\r\n        visiblePages = Math.min(this.pageLinkSize, numberOfPages);\r\n\r\n        //calculate range, keep current in middle if necessary\r\n        let start = Math.max(0, Math.ceil(this.getPage() - ((visiblePages) / 2))),\r\n        end = Math.min(numberOfPages - 1, start + visiblePages - 1);\r\n\r\n        //check when approaching to last page\r\n        var delta = this.pageLinkSize - (end - start + 1);\r\n        start = Math.max(0, start - delta);\r\n\r\n        return [start, end];\r\n    }\r\n\r\n    updatePageLinks() {\r\n        this.pageLinks = [];\r\n        let boundaries = this.calculatePageLinkBoundaries(),\r\n        start = boundaries[0],\r\n        end = boundaries[1];\r\n\r\n        for(let i = start; i <= end; i++) {\r\n            this.pageLinks.push(i + 1);\r\n        }\r\n    }\r\n\r\n    changePage(p :number) {\r\n        var pc = this.getPageCount();\r\n\r\n        if (p >= 0 && p < pc) {\r\n            this._first = this.rows * p;\r\n            var state = {\r\n                page: p,\r\n                first: this.first,\r\n                rows: this.rows,\r\n                pageCount: pc\r\n            };\r\n            this.updatePageLinks();\r\n\r\n            this.onPageChange.emit(state);\r\n            this.updatePaginatorState();\r\n        }\r\n    }\r\n\r\n    updateFirst() {\r\n        const page = this.getPage();\r\n        if (page > 0 && this.totalRecords && (this.first >= this.totalRecords)) {\r\n            Promise.resolve(null).then(() => this.changePage(page - 1));\r\n        }\r\n    }\r\n\r\n    getPage(): number {\r\n        return Math.floor(this.first / this.rows);\r\n    }\r\n\r\n    changePageToFirst(event) {\r\n      if (!this.isFirstPage()){\r\n          this.changePage(0);\r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n\r\n    changePageToPrev(event) {\r\n        this.changePage(this.getPage() - 1);\r\n        event.preventDefault();\r\n    }\r\n\r\n    changePageToNext(event) {\r\n        this.changePage(this.getPage()  + 1);\r\n        event.preventDefault();\r\n    }\r\n\r\n    changePageToLast(event) {\r\n      if (!this.isLastPage()){\r\n          this.changePage(this.getPageCount() - 1);\r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n\r\n    onPageLinkClick(event, page) {\r\n        this.changePage(page);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onRppChange(event) {\r\n        this.changePage(this.getPage());\r\n    }\r\n    \r\n    updatePaginatorState() {\r\n        this.paginatorState = {\r\n            page: this.getPage(),\r\n            pageCount: this.getPageCount(),\r\n            rows: this.rows,\r\n            first: this.first,\r\n            totalRecords: this.totalRecords\r\n        }\r\n    }\r\n\r\n    get currentPageReport() {\r\n        return this.currentPageReportTemplate\r\n                .replace(\"{currentPage}\", String(this.getPage() + 1))\r\n                .replace(\"{totalPages}\", String(this.getPageCount()))\r\n                .replace(\"{first}\", String(this._first + 1))\r\n                .replace(\"{last}\", String(Math.min(this._first + this.rows, this.totalRecords)))\r\n                .replace(\"{rows}\", String(this.rows))\r\n                .replace(\"{totalRecords}\", String(this.totalRecords));\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,DropdownModule,FormsModule,SharedModule],\r\n    exports: [Paginator,DropdownModule,FormsModule,SharedModule],\r\n    declarations: [Paginator]\r\n})\r\nexport class PaginatorModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}