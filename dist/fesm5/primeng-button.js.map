{"version":3,"file":"primeng-button.js","sources":["ng://primeng/button/button.ts","ng://primeng/button/primeng-button.ts"],"sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,Input,ChangeDetectionStrategy} from '@angular/core';\r\nimport {DomHandler} from 'primeng/dom';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n@Directive({\r\n    selector: '[pButton]'\r\n})\r\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() iconPos: 'left' | 'right' = 'left';\r\n    \r\n    @Input() cornerStyleClass: string = 'ui-corner-all';\r\n        \r\n    public _label: string;\r\n    \r\n    public _icon: string;\r\n            \r\n    public initialized: boolean;\r\n\r\n    constructor(public el: ElementRef) {}\r\n    \r\n    ngAfterViewInit() {\r\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\r\n        if (this.icon) {\r\n            let iconElement = document.createElement(\"span\");\r\n            iconElement.setAttribute(\"aria-hidden\", \"true\");\r\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\r\n            iconElement.className = iconPosClass  + ' ui-clickable ' + this.icon;\r\n            this.el.nativeElement.appendChild(iconElement);\r\n        }\r\n        \r\n        let labelElement = document.createElement(\"span\");\r\n        if (this.icon && !this.label) {\r\n            labelElement.setAttribute('aria-hidden', 'true');\r\n        }\r\n        labelElement.className = 'ui-button-text ui-clickable';\r\n        labelElement.appendChild(document.createTextNode(this.label||'ui-btn'));\r\n        this.el.nativeElement.appendChild(labelElement);\r\n        this.initialized = true;\r\n    }\r\n        \r\n    getStyleClass(): string {\r\n        let styleClass = 'ui-button ui-widget ui-state-default ' + this.cornerStyleClass;\r\n        if (this.icon) {\r\n            if (this.label != null && this.label != undefined) {\r\n                if (this.iconPos == 'left')\r\n                    styleClass = styleClass + ' ui-button-text-icon-left';\r\n                else\r\n                    styleClass = styleClass + ' ui-button-text-icon-right';\r\n            }\r\n            else {\r\n                styleClass = styleClass + ' ui-button-icon-only';\r\n            }\r\n        }\r\n        else {\r\n            if (this.label) {\r\n                styleClass = styleClass + ' ui-button-text-only';\r\n            }\r\n            else {\r\n                styleClass = styleClass + ' ui-button-text-empty';\r\n            }\r\n        }\r\n        \r\n        return styleClass;\r\n    }\r\n    \r\n    @Input() get label(): string {\r\n        return this._label;\r\n    }\r\n\r\n    set label(val: string) {\r\n        this._label = val;\r\n        \r\n        if (this.initialized) {\r\n            DomHandler.findSingle(this.el.nativeElement, '.ui-button-text').textContent = this._label;\r\n\r\n            if (!this.icon) {\r\n                if (this._label) {\r\n                    DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-empty');\r\n                    DomHandler.addClass(this.el.nativeElement, 'ui-button-text-only');\r\n                }\r\n                else {\r\n                    DomHandler.addClass(this.el.nativeElement, 'ui-button-text-empty');\r\n                    DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-only');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    @Input() get icon(): string {\r\n        return this._icon;\r\n    }\r\n\r\n    set icon(val: string) {\r\n        this._icon = val;\r\n        \r\n        if (this.initialized) {\r\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\r\n            DomHandler.findSingle(this.el.nativeElement, '.ui-clickable').className =\r\n                iconPosClass + ' ui-clickable ' + this.icon;\r\n        }\r\n    }\r\n        \r\n    ngOnDestroy() {\r\n        while(this.el.nativeElement.hasChildNodes()) {\r\n            this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\r\n        }\r\n        \r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-button',\r\n    template: `\r\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled\"\r\n            [ngClass]=\"{'ui-button ui-widget ui-state-default ui-corner-all':true,\r\n                        'ui-button-icon-only': (icon && !label),\r\n                        'ui-button-text-icon-left': (icon && label && iconPos === 'left'),\r\n                        'ui-button-text-icon-right': (icon && label && iconPos === 'right'),\r\n                        'ui-button-text-only': (!icon && label),\r\n                        'ui-button-text-empty': (!icon && !label),\r\n                        'ui-state-disabled': disabled}\"\r\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\">\r\n            <ng-content></ng-content>\r\n            <span [ngClass]=\"{'ui-clickable': true,\r\n                        'ui-button-icon-left': (iconPos === 'left'), \r\n                        'ui-button-icon-right': (iconPos === 'right')}\"\r\n                        [class]=\"icon\" *ngIf=\"icon\" [attr.aria-hidden]=\"true\"></span>\r\n            <span class=\"ui-button-text ui-clickable\" [attr.aria-hidden]=\"icon && !label\">{{label||'ui-btn'}}</span>\r\n        </button>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class Button {\r\n\r\n    @Input() type: string;\r\n\r\n    @Input() iconPos: string = 'left';\r\n\r\n    @Input() icon: string;\r\n\r\n    @Input() label: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [ButtonDirective,Button],\r\n    declarations: [ButtonDirective,Button]\r\n})\r\nexport class ButtonModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}