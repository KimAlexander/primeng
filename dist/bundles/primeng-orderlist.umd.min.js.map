{"version":3,"sources":["ng://primeng/orderlist/orderlist.ts"],"names":["OrderList","el","this","metaKeySelection","controlsPosition","filterMatchMode","selectionChange","EventEmitter","trackBy","index","item","onReorder","onSelectionChange","onFilterEvent","Object","defineProperty","prototype","_selection","val","ngAfterContentInit","_this","templates","forEach","getType","itemTemplate","template","ngAfterViewChecked","movedUp","movedDown","listItems","DomHandler","find","listViewChild","nativeElement","listItem","length","scrollInView","_value","filterValue","filter","onItemClick","event","itemTouched","selectedIndex","ObjectUtils","findIndexInList","selection","selected","metaKey","ctrlKey","shiftKey","__spread","insertIntoOrderedArray","value","emit","originalEvent","onFilterKeyup","target","trim","toLocaleLowerCase","filterLocale","visibleOptions","searchFields","filterBy","split","FilterUtils","isItemVisible","i","onItemTouchEnd","isSelected","moveUp","selectedItem","selectedItemIndex","movedItem","temp","moveTop","splice","unshift","scrollTop","moveDown","moveBottom","push","scrollHeight","onDragStart","dataTransfer","setData","blur","dragging","draggedItemIndex","onDragOver","dragOverItemIndex","preventDefault","onDragLeave","onDrop","dropIndex","reorderArray","onDragEnd","onListMouseMove","offsetY","getBoundingClientRect","top","document","body","bottomDiff","clientHeight","pageY","topDiff","onItemKeydown","currentTarget","which","nextItem","findNextItem","focus","prevItem","findPrevItem","nextElementSibling","hasClass","isHidden","previousElementSibling","ElementRef","__decorate","Input","Output","ViewChild","ContentChildren","PrimeTemplate","Component","selector","changeDetection","ChangeDetectionStrategy","Default","OrderListModule","NgModule","imports","CommonModule","ButtonModule","SharedModule","exports","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewChecked,AfterContentInit,Input,Output,ContentChildren,QueryList,TemplateRef,EventEmitter,ViewChild,ChangeDetectionStrategy} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {SharedModule,PrimeTemplate} from 'primeng/api';\r\nimport {DomHandler} from 'primeng/dom';\r\nimport {ObjectUtils} from 'primeng/utils';\r\nimport { FilterUtils } from 'primeng/utils';\r\n\r\n@Component({\r\n    selector: 'p-orderList',\r\n    template: `\r\n        <div [ngClass]=\"{'ui-orderlist ui-widget': true, 'ui-orderlist-controls-left': controlsPosition === 'left',\r\n                    'ui-orderlist-controls-right': controlsPosition === 'right'}\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <div class=\"ui-orderlist-controls\">\r\n                <button type=\"button\" pButton icon=\"pi pi-angle-up\" (click)=\"moveUp($event)\"></button>\r\n                <button type=\"button\" pButton icon=\"pi pi-angle-double-up\" (click)=\"moveTop($event)\"></button>\r\n                <button type=\"button\" pButton icon=\"pi pi-angle-down\" (click)=\"moveDown($event)\"></button>\r\n                <button type=\"button\" pButton icon=\"pi pi-angle-double-down\" (click)=\"moveBottom($event)\"></button>\r\n            </div>\r\n            <div class=\"ui-orderlist-list-container\">\r\n                <div class=\"ui-orderlist-caption ui-widget-header ui-corner-top\" *ngIf=\"header\">{{header}}</div>\r\n                <div class=\"ui-orderlist-filter-container ui-widget-content\" *ngIf=\"filterBy\">\r\n                    <input type=\"text\" role=\"textbox\" (keyup)=\"onFilterKeyup($event)\" class=\"ui-inputtext ui-widget ui-state-default ui-corner-all\" [attr.placeholder]=\"filterPlaceholder\" [attr.aria-label]=\"ariaFilterLabel\">\r\n                    <span class=\"ui-orderlist-filter-icon pi pi-search\"></span>\r\n                </div>\r\n                <ul #listelement class=\"ui-widget-content ui-orderlist-list ui-corner-bottom\" [ngStyle]=\"listStyle\" (dragover)=\"onListMouseMove($event)\">\r\n                    <ng-template ngFor [ngForTrackBy]=\"trackBy\" let-item [ngForOf]=\"value\" let-i=\"index\" let-l=\"last\">\r\n                        <li class=\"ui-orderlist-droppoint\" *ngIf=\"dragdrop && isItemVisible(item)\" (dragover)=\"onDragOver($event, i)\" (drop)=\"onDrop($event, i)\" (dragleave)=\"onDragLeave($event)\"\r\n                            [ngClass]=\"{'ui-orderlist-droppoint-highlight': (i === dragOverItemIndex)}\"></li>\r\n                        <li class=\"ui-orderlist-item\" tabindex=\"0\"\r\n                            [ngClass]=\"{'ui-state-highlight':isSelected(item)}\"\r\n                            (click)=\"onItemClick($event,item,i)\" (touchend)=\"onItemTouchEnd($event)\" (keydown)=\"onItemKeydown($event,item,i)\"\r\n                            [style.display]=\"isItemVisible(item) ? 'block' : 'none'\" role=\"option\" [attr.aria-selected]=\"isSelected(item)\"\r\n                            [draggable]=\"dragdrop\" (dragstart)=\"onDragStart($event, i)\" (dragend)=\"onDragEnd($event)\">\r\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item, index: i}\"></ng-container>\r\n                        </li>\r\n                        <li class=\"ui-orderlist-droppoint\" *ngIf=\"dragdrop && l\" (dragover)=\"onDragOver($event, i + 1)\" (drop)=\"onDrop($event, i + 1)\" (dragleave)=\"onDragLeave($event)\"\r\n                            [ngClass]=\"{'ui-orderlist-droppoint-highlight': (i + 1 === dragOverItemIndex)}\"></li>\r\n                    </ng-template>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class OrderList implements AfterViewChecked,AfterContentInit {\r\n\r\n    @Input() header: string;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() listStyle: any;\r\n\r\n    @Input() responsive: boolean;\r\n\r\n    @Input() filterBy: string;\r\n\r\n    @Input() filterPlaceholder: string;\r\n\r\n    @Input() filterLocale: string;\r\n\r\n    @Input() metaKeySelection: boolean = true;\r\n\r\n    @Input() dragdrop: boolean;\r\n\r\n    @Input() controlsPosition: string = 'left';\r\n\r\n    @Input() ariaFilterLabel: string;\r\n\r\n    @Input() filterMatchMode: string = \"contains\";\r\n\r\n    @Output() selectionChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() trackBy: Function = (index: number, item: any) => item;\r\n\r\n    @Output() onReorder: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onSelectionChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onFilterEvent: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild('listelement') listViewChild: ElementRef;\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    public itemTemplate: TemplateRef<any>;\r\n\r\n    _selection: any[];\r\n\r\n    movedUp: boolean;\r\n\r\n    movedDown: boolean;\r\n\r\n    itemTouched: boolean;\r\n\r\n    draggedItemIndex: number;\r\n\r\n    dragOverItemIndex: number;\r\n\r\n    dragging: boolean;\r\n\r\n    public filterValue: string;\r\n\r\n    public visibleOptions: any[];\r\n\r\n    public _value: any[];\r\n\r\n    constructor(public el: ElementRef) {}\r\n\r\n    get selection(): any[] {\r\n        return this._selection;\r\n    }\r\n\r\n    @Input() set selection(val:any[]) {\r\n        this._selection = val;\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'item':\r\n                    this.itemTemplate = item.template;\r\n                break;\r\n\r\n                default:\r\n                    this.itemTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        if (this.movedUp||this.movedDown) {\r\n            let listItems = DomHandler.find(this.listViewChild.nativeElement, 'li.ui-state-highlight');\r\n            let listItem;\r\n\r\n            if (listItems.length > 0) {\r\n                if (this.movedUp)\r\n                    listItem = listItems[0];\r\n                else\r\n                    listItem = listItems[listItems.length - 1];\r\n\r\n                DomHandler.scrollInView(this.listViewChild.nativeElement, listItem);\r\n            }\r\n            this.movedUp = false;\r\n            this.movedDown = false;\r\n        }\r\n    }\r\n\r\n    get value(): any[] {\r\n        return this._value;\r\n    }\r\n\r\n    @Input() set value(val:any[]) {\r\n        this._value = val;\r\n        if (this.filterValue) {\r\n            this.filter();\r\n        }\r\n    }\r\n\r\n    onItemClick(event, item, index) {\r\n        this.itemTouched = false;\r\n        let selectedIndex = ObjectUtils.findIndexInList(item, this.selection);\r\n        let selected = (selectedIndex != -1);\r\n        let metaSelection = this.itemTouched ? false : this.metaKeySelection;\r\n\r\n        if (metaSelection) {\r\n            let metaKey = (event.metaKey||event.ctrlKey||event.shiftKey);\r\n\r\n            if (selected && metaKey) {\r\n                this._selection = this._selection.filter((val, index) => index !== selectedIndex);\r\n            }\r\n            else {\r\n                this._selection = (metaKey) ? this._selection ? [...this._selection] : [] : [];\r\n                ObjectUtils.insertIntoOrderedArray(item, index, this._selection, this.value);\r\n            }\r\n        }\r\n        else {\r\n            if (selected) {\r\n                this._selection = this._selection.filter((val, index) => index !== selectedIndex);\r\n            }\r\n            else {\r\n                this._selection = this._selection ? [...this._selection] : [];\r\n                ObjectUtils.insertIntoOrderedArray(item, index, this._selection, this.value);\r\n            }\r\n        }\r\n\r\n        //binding\r\n        this.selectionChange.emit(this._selection);\r\n\r\n        //event\r\n        this.onSelectionChange.emit({originalEvent:event, value: this._selection});\r\n    }\r\n\r\n    onFilterKeyup(event) {\r\n        this.filterValue = event.target.value.trim().toLocaleLowerCase(this.filterLocale);\r\n        this.filter();\r\n\r\n        this.onFilterEvent.emit({\r\n            originalEvent: event,\r\n            value: this.visibleOptions\r\n        });\r\n    }\r\n\r\n    filter() {\r\n        let searchFields: string[] = this.filterBy.split(',');\r\n        this.visibleOptions = FilterUtils.filter(this.value, searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\r\n    }\r\n\r\n    isItemVisible(item: any): boolean {\r\n        if (this.filterValue && this.filterValue.trim().length) {\r\n            for (let i = 0; i < this.visibleOptions.length; i++) {\r\n                if (item == this.visibleOptions[i]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    onItemTouchEnd(event) {\r\n        this.itemTouched = true;\r\n    }\r\n\r\n    isSelected(item: any) {\r\n        return ObjectUtils.findIndexInList(item, this.selection) != -1;\r\n    }\r\n\r\n    moveUp(event) {\r\n        if (this.selection) {\r\n            for (let i = 0; i < this.selection.length; i++) {\r\n                let selectedItem = this.selection[i];\r\n                let selectedItemIndex: number = ObjectUtils.findIndexInList(selectedItem, this.value);\r\n\r\n                if (selectedItemIndex != 0) {\r\n                    let movedItem = this.value[selectedItemIndex];\r\n                    let temp = this.value[selectedItemIndex-1];\r\n                    this.value[selectedItemIndex-1] = movedItem;\r\n                    this.value[selectedItemIndex] = temp;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.movedUp = true;\r\n            this.onReorder.emit(event);\r\n        }\r\n    }\r\n\r\n    moveTop(event) {\r\n        if (this.selection) {\r\n            for (let i = this.selection.length - 1; i >= 0; i--) {\r\n                let selectedItem = this.selection[i];\r\n                let selectedItemIndex: number = ObjectUtils.findIndexInList(selectedItem, this.value);\r\n\r\n                if (selectedItemIndex != 0) {\r\n                    let movedItem = this.value.splice(selectedItemIndex,1)[0];\r\n                    this.value.unshift(movedItem);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.onReorder.emit(event);\r\n            this.listViewChild.nativeElement.scrollTop = 0;\r\n        }\r\n    }\r\n\r\n    moveDown(event) {\r\n        if (this.selection) {\r\n            for (let i = this.selection.length - 1; i >= 0; i--) {\r\n                let selectedItem = this.selection[i];\r\n                let selectedItemIndex: number = ObjectUtils.findIndexInList(selectedItem, this.value);\r\n\r\n                if (selectedItemIndex != (this.value.length - 1)) {\r\n                    let movedItem = this.value[selectedItemIndex];\r\n                    let temp = this.value[selectedItemIndex+1];\r\n                    this.value[selectedItemIndex+1] = movedItem;\r\n                    this.value[selectedItemIndex] = temp;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.movedDown = true;\r\n            this.onReorder.emit(event);\r\n        }\r\n    }\r\n\r\n    moveBottom(event) {\r\n        if (this.selection) {\r\n            for (let i = 0; i < this.selection.length; i++) {\r\n                let selectedItem = this.selection[i];\r\n                let selectedItemIndex: number = ObjectUtils.findIndexInList(selectedItem, this.value);\r\n\r\n                if (selectedItemIndex != (this.value.length - 1)) {\r\n                    let movedItem = this.value.splice(selectedItemIndex,1)[0];\r\n                    this.value.push(movedItem);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.onReorder.emit(event);\r\n            this.listViewChild.nativeElement.scrollTop = this.listViewChild.nativeElement.scrollHeight;\r\n        }\r\n    }\r\n\r\n    onDragStart(event: DragEvent, index: number) {\r\n        event.dataTransfer.setData('text', 'b');    // For firefox\r\n        (<HTMLLIElement> event.target).blur();\r\n        this.dragging = true;\r\n        this.draggedItemIndex = index;\r\n    }\r\n\r\n    onDragOver(event: DragEvent, index: number) {\r\n        if (this.dragging && this.draggedItemIndex !== index && this.draggedItemIndex + 1 !== index) {\r\n            this.dragOverItemIndex = index;\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onDragLeave(event: DragEvent) {\r\n        this.dragOverItemIndex = null;\r\n    }\r\n\r\n    onDrop(event: DragEvent, index: number) {\r\n        let dropIndex = (this.draggedItemIndex > index) ? index : (index === 0) ? 0 : index - 1;\r\n        ObjectUtils.reorderArray(this.value, this.draggedItemIndex, dropIndex);\r\n        this.dragOverItemIndex = null;\r\n        this.onReorder.emit(event);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDragEnd(event: DragEvent) {\r\n        this.dragging = false;\r\n    }\r\n\r\n    onListMouseMove(event: MouseEvent) {\r\n        if (this.dragging) {\r\n            let offsetY = this.listViewChild.nativeElement.getBoundingClientRect().top + document.body.scrollTop;\r\n            let bottomDiff = (offsetY + this.listViewChild.nativeElement.clientHeight) - event.pageY;\r\n            let topDiff = (event.pageY - offsetY);\r\n            if (bottomDiff < 25 && bottomDiff > 0)\r\n                this.listViewChild.nativeElement.scrollTop += 15;\r\n            else if (topDiff < 25 && topDiff > 0)\r\n                this.listViewChild.nativeElement.scrollTop -= 15;\r\n        }\r\n    }\r\n\r\n    onItemKeydown(event: KeyboardEvent, item, index: Number) {\r\n        let listItem = <HTMLLIElement> event.currentTarget;\r\n\r\n        switch(event.which) {\r\n            //down\r\n            case 40:\r\n                var nextItem = this.findNextItem(listItem);\r\n                if (nextItem) {\r\n                    nextItem.focus();\r\n                }\r\n\r\n                event.preventDefault();\r\n            break;\r\n\r\n            //up\r\n            case 38:\r\n                var prevItem = this.findPrevItem(listItem);\r\n                if (prevItem) {\r\n                    prevItem.focus();\r\n                }\r\n\r\n                event.preventDefault();\r\n            break;\r\n\r\n            //enter\r\n            case 13:\r\n                this.onItemClick(event, item, index);\r\n                event.preventDefault();\r\n            break;\r\n        }\r\n    }\r\n\r\n    findNextItem(item) {\r\n        let nextItem = item.nextElementSibling;\r\n\r\n        if (nextItem)\r\n            return !DomHandler.hasClass(nextItem, 'ui-orderlist-item') || DomHandler.isHidden(nextItem) ? this.findNextItem(nextItem) : nextItem;\r\n        else\r\n            return null;\r\n    }\r\n\r\n    findPrevItem(item) {\r\n        let prevItem = item.previousElementSibling;\r\n\r\n        if (prevItem)\r\n            return !DomHandler.hasClass(prevItem, 'ui-orderlist-item') || DomHandler.isHidden(prevItem) ? this.findPrevItem(prevItem) : prevItem;\r\n        else\r\n            return null;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,ButtonModule,SharedModule],\r\n    exports: [OrderList,SharedModule],\r\n    declarations: [OrderList]\r\n})\r\nexport class OrderListModule { }\r\n"]}