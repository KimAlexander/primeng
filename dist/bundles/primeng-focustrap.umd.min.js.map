{"version":3,"sources":["ng://primeng/focustrap/focustrap.ts"],"names":["FocusTrap","el","this","prototype","onkeydown","e","pFocusTrapDisabled","preventDefault","focusableElements","DomHandler","getFocusableElements","nativeElement","length","document","activeElement","focusedIndex","indexOf","shiftKey","focus","ElementRef","__decorate","Input","HostListener","Directive","selector","FocusTrapModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"mwBAAAA,EAAA,WAWI,SAAAA,EAAmBC,GAAAC,KAAAD,GAAAA,EA+BvB,OA3BID,EAAAG,UAAAC,UAAA,SAAUC,GACN,IAAgC,IAA5BH,KAAKI,mBAA6B,CAClCD,EAAEE,iBACF,IAAIC,EAAoBC,EAAAA,WAAWC,qBAAqBR,KAAKD,GAAGU,eAChE,GAAIH,GAAqBA,EAAkBI,OAAS,EAChD,GAAKC,SAASC,cAGT,CACD,IAAIC,EAAeP,EAAkBQ,QAAQH,SAASC,eAElDT,EAAEY,UACmB,GAAjBF,GAAuC,IAAjBA,EACtBP,EAAkBA,EAAkBI,OAAS,GAAGM,QAEhDV,EAAkBO,EAAe,GAAGG,SAGnB,GAAjBH,GAAsBA,IAAkBP,EAAkBI,OAAS,EACnEJ,EAAkB,GAAGU,QAErBV,EAAkBO,EAAe,GAAGG,aAf5CV,EAAkB,GAAGU,mDAVdC,EAAAA,cAFdC,EAAA,CAARC,EAAAA,kDAMDD,EAAA,CAFCE,EAAAA,aAAa,cAAe,CAAC,WAC7BA,EAAAA,aAAa,oBAAqB,CAAC,0CAP3BtB,EAASoB,EAAA,CAHrBG,EAAAA,UAAU,CACPC,SAAU,kBAEDxB,GAPb,gBAiDA,SAAAyB,KAA+B,OAAlBA,EAAeL,EAAA,CAL3BM,EAAAA,SAAS,CACNC,QAAS,CAACC,EAAAA,cACVC,QAAS,CAAC7B,GACV8B,aAAc,CAAC9B,MAENyB","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener, Input} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from 'primeng/dom';\r\n\r\n@Directive({\r\n    selector: '[pFocusTrap]',\r\n})\r\nexport class FocusTrap {\r\n\r\n    @Input() pFocusTrapDisabled: boolean;\r\n\r\n    constructor(public el: ElementRef) {}\r\n\r\n    @HostListener('keydown.tab', ['$event'])\r\n    @HostListener('keydown.shift.tab', ['$event'])\r\n    onkeydown(e) {\r\n        if (this.pFocusTrapDisabled !== true) {\r\n            e.preventDefault();\r\n            let focusableElements = DomHandler.getFocusableElements(this.el.nativeElement);\r\n            if (focusableElements && focusableElements.length > 0) {\r\n                if (!document.activeElement) {\r\n                    focusableElements[0].focus();\r\n                }\r\n                else {\r\n                    let focusedIndex = focusableElements.indexOf(document.activeElement);\r\n\r\n                    if (e.shiftKey) {\r\n                        if (focusedIndex == -1 || focusedIndex === 0)\r\n                            focusableElements[focusableElements.length - 1].focus();\r\n                        else\r\n                            focusableElements[focusedIndex - 1].focus();\r\n                    }\r\n                    else {\r\n                        if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\r\n                            focusableElements[0].focus();\r\n                        else\r\n                            focusableElements[focusedIndex + 1].focus();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [FocusTrap],\r\n    declarations: [FocusTrap]\r\n})\r\nexport class FocusTrapModule { }"]}