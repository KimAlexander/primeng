{"version":3,"file":"primeng-megamenu.umd.js","sources":["ng://primeng/megamenu/megamenu.ts"],"sourcesContent":["import {NgModule,Component,ElementRef,Input,Renderer2,ChangeDetectionStrategy} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from 'primeng/dom';\r\nimport {MegaMenuItem,MenuItem} from 'primeng/api';\r\nimport {RouterModule} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'p-megaMenu',\r\n    template: `\r\n        <div [class]=\"styleClass\" [ngStyle]=\"style\"\r\n            [ngClass]=\"{'ui-megamenu ui-widget ui-widget-content ui-corner-all':true,'ui-megamenu-horizontal': orientation == 'horizontal','ui-megamenu-vertical': orientation == 'vertical'}\">\r\n            <ul class=\"ui-megamenu-root-list\" role=\"menubar\">\r\n                <ng-template ngFor let-category [ngForOf]=\"model\">\r\n                    <li *ngIf=\"category.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': category.visible === false}\">\r\n                    <li *ngIf=\"!category.separator\" #item [ngClass]=\"{'ui-menuitem ui-corner-all':true,'ui-menuitem-active':item==activeItem, 'ui-helper-hidden': category.visible === false}\"\r\n                        (mouseenter)=\"onItemMouseEnter($event, item, category)\" (mouseleave)=\"onItemMouseLeave($event, item)\">\r\n   \r\n                        <a *ngIf=\"!category.routerLink\" [href]=\"category.url||'#'\" [attr.target]=\"category.target\" [attr.title]=\"category.title\" [attr.id]=\"category.id\" (click)=\"itemClick($event, category)\" [attr.tabindex]=\"category.tabindex ? category.tabindex : '0'\"\r\n                            [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':category.disabled}\" [ngStyle]=\"category.style\" [class]=\"category.styleClass\">\r\n                            <span class=\"ui-menuitem-icon\" *ngIf=\"category.icon\" [ngClass]=\"category.icon\"></span>\r\n                            <span class=\"ui-menuitem-text\">{{category.label}}</span>\r\n                            <span *ngIf=\"category.items\" class=\"ui-submenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-down':orientation=='horizontal','pi-caret-right':orientation=='vertical'}\"></span>\r\n                        </a>\r\n                        <a *ngIf=\"category.routerLink\" [routerLink]=\"category.routerLink\" [queryParams]=\"category.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"category.routerLinkActiveOptions||{exact:false}\" [attr.tabindex]=\"category.tabindex ? category.tabindex : '0'\" \r\n                            [attr.target]=\"category.target\" [attr.title]=\"category.title\" [attr.id]=\"category.id\"\r\n                            (click)=\"itemClick($event, category)\" [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':category.disabled}\" [ngStyle]=\"category.style\" [class]=\"category.styleClass\"\r\n                            [fragment]=\"category.fragment\" [queryParamsHandling]=\"category.queryParamsHandling\" [preserveFragment]=\"category.preserveFragment\" [skipLocationChange]=\"category.skipLocationChange\" [replaceUrl]=\"category.replaceUrl\" [state]=\"category.state\">\r\n                            <span class=\"ui-menuitem-icon\" *ngIf=\"category.icon\" [ngClass]=\"category.icon\"></span>\r\n                            <span class=\"ui-menuitem-text\">{{category.label}}</span>\r\n                        </a>\r\n\r\n                        <div class=\"ui-megamenu-panel ui-widget-content ui-corner-all ui-shadow\" *ngIf=\"category.items\">\r\n                            <div class=\"ui-g\">\r\n                                <ng-template ngFor let-column [ngForOf]=\"category.items\">\r\n                                    <div [class]=\"getColumnClass(category)\">\r\n                                        <ng-template ngFor let-submenu [ngForOf]=\"column\">\r\n                                            <ul class=\"ui-megamenu-submenu\" role=\"menu\">\r\n                                                <li class=\"ui-widget-header ui-megamenu-submenu-header ui-corner-all\">{{submenu.label}}</li>\r\n                                                <ng-template ngFor let-item [ngForOf]=\"submenu.items\">\r\n                                                    <li *ngIf=\"item.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\" role=\"separator\">\r\n                                                    <li *ngIf=\"!item.separator\" class=\"ui-menuitem ui-corner-all\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\" role=\"none\">\r\n                                                        <a *ngIf=\"!item.routerLink\" role=\"menuitem\" [href]=\"item.url||'#'\" class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\r\n                                                            [ngClass]=\"{'ui-state-disabled':item.disabled}\" (click)=\"itemClick($event, item)\">\r\n                                                            <span class=\"ui-menuitem-icon\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\r\n                                                            <span class=\"ui-menuitem-text\">{{item.label}}</span>\r\n                                                        </a>\r\n                                                        <a *ngIf=\"item.routerLink\" role=\"menuitem\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\r\n                                                            [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\" class=\"ui-menuitem-link ui-corner-all\" \r\n                                                             [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\"\r\n                                                            [ngClass]=\"{'ui-state-disabled':item.disabled}\" (click)=\"itemClick($event, item)\"\r\n                                                            [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\">\r\n                                                            <span class=\"ui-menuitem-icon\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\r\n                                                            <span class=\"ui-menuitem-text\">{{item.label}}</span>\r\n                                                        </a>\r\n                                                    </li>\r\n                                                </ng-template>\r\n                                            </ul>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ng-template>\r\n                <li class=\"ui-menuitem ui-menuitem-custom ui-corner-all\" *ngIf=\"orientation === 'horizontal'\">\r\n                    <ng-content></ng-content>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class MegaMenu {\r\n\r\n    @Input() model: MegaMenuItem[];\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n    \r\n    @Input() orientation: string = 'horizontal';\r\n\r\n    @Input() autoZIndex: boolean = true;\r\n\r\n    @Input() baseZIndex: number = 0;\r\n    \r\n    activeItem: any;\r\n\r\n    hideTimeout: any;\r\n                \r\n    constructor(public el: ElementRef, public renderer: Renderer2) {}\r\n    \r\n    onItemMouseEnter(event, item, menuitem: MegaMenuItem) {\r\n        if (menuitem.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (this.hideTimeout) {\r\n            clearTimeout(this.hideTimeout);\r\n            this.hideTimeout = null;\r\n        }\r\n        \r\n        this.activeItem = item;\r\n\r\n        if (menuitem.items) {\r\n            let submenu = item.children[0].nextElementSibling;\r\n            if (submenu) {\r\n                if (this.autoZIndex) {\r\n                    submenu.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\r\n                }\r\n\r\n                if (this.orientation === 'horizontal') {\r\n                    submenu.style.top = DomHandler.getOuterHeight(item.children[0]) + 'px';\r\n                    submenu.style.left = '0px';\r\n                }\r\n                else if (this.orientation === 'vertical') {\r\n                    submenu.style.top = '0px';\r\n                    submenu.style.left = DomHandler.getOuterWidth(item.children[0]) + 'px';\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    onItemMouseLeave(event, link) {\r\n        this.hideTimeout = setTimeout(() => {\r\n            this.activeItem = null;\r\n        }, 1000);\r\n    }\r\n    \r\n    itemClick(event, item: MenuItem | MegaMenuItem)Â {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        \r\n        if (!item.url) {\r\n            event.preventDefault();\r\n        }\r\n        \r\n        if (item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n                        \r\n        this.activeItem = null;\r\n    }\r\n    \r\n    getColumnClass(menuitem: MegaMenuItem) {\r\n        let length = menuitem.items ? menuitem.items.length: 0;\r\n        let columnClass;\r\n        switch(length) {\r\n            case 2:\r\n                columnClass= 'ui-g-6';\r\n            break;\r\n            \r\n            case 3:\r\n                columnClass= 'ui-g-4';\r\n            break;\r\n            \r\n            case 4:\r\n                columnClass= 'ui-g-3';\r\n            break;\r\n            \r\n            case 6:\r\n                columnClass= 'ui-g-2';\r\n            break;\r\n                        \r\n            default:\r\n                columnClass= 'ui-g-12';\r\n            break;\r\n        }\r\n        \r\n        return columnClass;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,RouterModule],\r\n    exports: [MegaMenu,RouterModule],\r\n    declarations: [MegaMenu]\r\n})\r\nexport class MegaMenuModule { }"],"names":["DomHandler","ElementRef","Renderer2","Input","Component","ChangeDetectionStrategy","NgModule","CommonModule","RouterModule"],"mappings":"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"}