{"version":3,"sources":["ng://primeng/overlaypanel/overlaypanel.ts"],"names":["OverlayPanel","el","renderer","cd","zone","this","dismissable","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","onShow","EventEmitter","onHide","overlayVisible","render","isContainerClicked","prototype","ngAfterContentInit","_this","templates","forEach","item","getType","contentTemplate","template","onContainerClick","bindDocumentClickListener","documentClickListener","runOutsideAngular","documentEvent","DomHandler","isIOS","listen","event","container","contains","target","run","hide","markForCheck","unbindDocumentClickListener","toggle","hasTargetChanged","destroyCallback","show","currentTarget","appendContainer","appendTo","document","body","appendChild","restoreAppend","nativeElement","align","style","zIndex","String","zindex","absolutePosition","getOffset","top","addClass","Math","floor","left","onAnimationStart","toState","element","emit","bindDocumentResizeListener","onAnimationEnd","onContainerDestroy","onCloseClick","preventDefault","onWindowResize","documentResizeListener","bind","window","addEventListener","unbindDocumentResizeListener","removeEventListener","ngOnDestroy","ElementRef","Renderer2","ChangeDetectorRef","NgZone","__decorate","Input","Output","ContentChildren","PrimeTemplate","Component","selector","animations","trigger","state","transform","opacity","transition","animate","changeDetection","ChangeDetectionStrategy","Default","OverlayPanelModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,OnDestroy,EventEmitter,Renderer2,ElementRef,ChangeDetectorRef,NgZone,\r\n        ContentChildren,TemplateRef,AfterContentInit,QueryList,ChangeDetectionStrategy} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from 'primeng/dom';\r\nimport {PrimeTemplate} from 'primeng/api';\r\nimport {trigger,state,style,transition,animate,AnimationEvent} from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'p-overlayPanel',\r\n    template: `\r\n        <div *ngIf=\"render\" [ngClass]=\"'ui-overlaypanel ui-widget ui-widget-content ui-corner-all ui-shadow'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onContainerClick()\"\r\n            [@animation]=\"{value: (overlayVisible ? 'open': 'close'), params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" \r\n                (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\">\r\n            <div class=\"ui-overlaypanel-content\">\r\n                <ng-content></ng-content>\r\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\r\n            </div>\r\n            <a tabindex=\"0\" *ngIf=\"showCloseIcon\" class=\"ui-overlaypanel-close ui-state-default\" (click)=\"onCloseClick($event)\" (keydown.enter)=\"hide()\" [attr.aria-label]=\"ariaCloseLabel\">\r\n                <span class=\"ui-overlaypanel-close-icon pi pi-times\"></span>\r\n            </a>\r\n        </div>\r\n    `,\r\n    animations: [\r\n        trigger('animation', [\r\n            state('void', style({\r\n                transform: 'translateY(5%)',\r\n                opacity: 0\r\n            })),\r\n            state('close', style({\r\n                transform: 'translateY(5%)',\r\n                opacity: 0\r\n            })),\r\n            state('open', style({\r\n                transform: 'translateY(0)',\r\n                opacity: 1\r\n            })),\r\n            transition('void => open', animate('{{showTransitionParams}}')),\r\n            transition('open => close', animate('{{hideTransitionParams}}'))\r\n        ])\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class OverlayPanel implements AfterContentInit, OnDestroy {\r\n\r\n    @Input() dismissable: boolean = true;\r\n\r\n    @Input() showCloseIcon: boolean;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n    \r\n    @Input() appendTo: any;\r\n\r\n    @Input() autoZIndex: boolean = true;\r\n\r\n    @Input() ariaCloseLabel: string;\r\n    \r\n    @Input() baseZIndex: number = 0;\r\n    \r\n    @Input() showTransitionOptions: string = '225ms ease-out';\r\n\r\n    @Input() hideTransitionOptions: string = '195ms ease-in';\r\n\r\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n    \r\n    container: HTMLDivElement;\r\n\r\n    overlayVisible: boolean = false;\r\n\r\n    render: boolean = false;\r\n\r\n    isContainerClicked: boolean = true;\r\n\r\n    documentClickListener: any;\r\n            \r\n    target: any;\r\n    \r\n    willHide: boolean;\r\n        \r\n    documentResizeListener: any;\r\n\r\n    contentTemplate: TemplateRef<any>;\r\n\r\n    destroyCallback: Function;\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2, private cd: ChangeDetectorRef, private zone: NgZone) {}\r\n        \r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'content':\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n\r\n                default:\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    onContainerClick() {\r\n        this.isContainerClicked = true;\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if (!this.documentClickListener && this.dismissable) {\r\n            this.zone.runOutsideAngular(() => {\r\n                let documentEvent = DomHandler.isIOS() ? 'touchstart' : 'click';\r\n                this.documentClickListener = this.renderer.listen('document', documentEvent, (event) => {\r\n                    if (!this.container.contains(event.target) && this.target !== event.target &&Â !this.target.contains(event.target) && !this.isContainerClicked) {\r\n                        this.zone.run(() => {\r\n                            this.hide();\r\n                        });\r\n                    }\r\n\r\n                    this.isContainerClicked = false;\r\n                    this.cd.markForCheck();\r\n                });\r\n            });\r\n        }\r\n    }\r\n    \r\n    unbindDocumentClickListener() {\r\n        if (this.documentClickListener) {\r\n            this.documentClickListener();\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n    \r\n    toggle(event, target?) {\r\n        if (this.overlayVisible) {\r\n            if (this.hasTargetChanged(event, target)) {\r\n                this.destroyCallback = () => {\r\n                    this.show(null, (target||event.currentTarget||event.target));\r\n                };\r\n            }\r\n\r\n            this.overlayVisible = false;\r\n        }\r\n        else {\r\n            this.show(event, target);\r\n        }\r\n    }\r\n\r\n    show(event, target?) {\r\n        this.target = target||event.currentTarget||event.target;\r\n        this.overlayVisible = true;\r\n        this.render = true;\r\n    }\r\n\r\n    hasTargetChanged(event, target) {\r\n        return this.target != null && this.target !== (target||event.currentTarget||event.target);\r\n    }\r\n\r\n    appendContainer() {\r\n        if (this.appendTo) {\r\n            if (this.appendTo === 'body')\r\n                document.body.appendChild(this.container);\r\n            else\r\n                DomHandler.appendChild(this.container, this.appendTo);\r\n        }\r\n    }\r\n\r\n    restoreAppend() {\r\n        if (this.container && this.appendTo) {\r\n            this.el.nativeElement.appendChild(this.container);\r\n        }\r\n    }\r\n\r\n    align() {\r\n        if (this.autoZIndex) {\r\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\r\n        }\r\n        DomHandler.absolutePosition(this.container, this.target);\r\n        if (DomHandler.getOffset(this.container).top < DomHandler.getOffset(this.target).top) {\r\n            DomHandler.addClass(this.container, 'ui-overlaypanel-flipped');\r\n        }\r\n        if (Math.floor(DomHandler.getOffset(this.container).left) < Math.floor(DomHandler.getOffset(this.target).left) &&\r\n            DomHandler.getOffset(this.container).left > 0) {\r\n            DomHandler.addClass(this.container, 'ui-overlaypanel-shifted');\r\n        }\r\n    }\r\n\r\n    onAnimationStart(event: AnimationEvent) {\r\n        if (event.toState === 'open') {\r\n            this.container = event.element;\r\n            this.onShow.emit(null);\r\n            this.appendContainer();\r\n            this.align();\r\n            this.bindDocumentClickListener();\r\n            this.bindDocumentResizeListener();\r\n        }\r\n    }\r\n\r\n    onAnimationEnd(event: AnimationEvent) {\r\n        switch (event.toState) {\r\n            case 'void':\r\n                if (this.destroyCallback) {\r\n                    this.destroyCallback();\r\n                    this.destroyCallback = null;\r\n                }\r\n            break;\r\n            \r\n            case 'close':\r\n                this.onContainerDestroy();\r\n                this.onHide.emit({});\r\n                this.render = false;\r\n            break;     \r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.overlayVisible = false;\r\n    }\r\n\r\n    onCloseClick(event) {\r\n        this.hide();\r\n        event.preventDefault();\r\n    }\r\n\r\n    onWindowResize(event) {\r\n        this.hide();\r\n    }\r\n\r\n    bindDocumentResizeListener() {\r\n        this.documentResizeListener = this.onWindowResize.bind(this);\r\n        window.addEventListener('resize', this.documentResizeListener);\r\n    }\r\n    \r\n    unbindDocumentResizeListener() {\r\n        if (this.documentResizeListener) {\r\n            window.removeEventListener('resize', this.documentResizeListener);\r\n            this.documentResizeListener = null;\r\n        }\r\n    }\r\n\r\n    onContainerDestroy() {\r\n        this.target = null;\r\n        this.unbindDocumentClickListener();\r\n        this.unbindDocumentResizeListener();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.target = null;\r\n        this.destroyCallback = null;\r\n        if (this.container) {\r\n            this.restoreAppend();\r\n            this.onContainerDestroy();\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [OverlayPanel],\r\n    declarations: [OverlayPanel]\r\n})\r\nexport class OverlayPanelModule { }\r\n"]}