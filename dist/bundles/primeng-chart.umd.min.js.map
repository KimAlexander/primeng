{"version":3,"sources":["ng://primeng/chart/chart.ts"],"names":["UIChart","el","this","options","plugins","responsive","onDataSelect","EventEmitter","Object","defineProperty","prototype","_data","val","reinit","ngAfterViewInit","initChart","initialized","onCanvasClick","event","chart","element","getElementAtEvent","dataset","getDatasetAtEvent","emit","originalEvent","opts","height","width","maintainAspectRatio","Chart","nativeElement","children","type","data","getCanvas","getBase64Image","toBase64Image","generateLegend","refresh","update","destroy","ngOnDestroy","ElementRef","__decorate","Input","Output","Component","selector","template","changeDetection","ChangeDetectionStrategy","Default","ChartModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"+uBAAAA,EAAA,WAmCI,SAAAA,EAAmBC,GAAAC,KAAAD,GAAAA,EAlBVC,KAAAC,QAAe,GAEfD,KAAAE,QAAiB,GAMjBF,KAAAG,YAAsB,EAErBH,KAAAI,aAAkC,IAAIC,EAAAA,aAqFpD,OA3EaC,OAAAC,eAAIT,EAAAU,UAAA,OAAI,KAAR,WACL,OAAOR,KAAKS,WAGhB,SAASC,GACLV,KAAKS,MAAQC,EACbV,KAAKW,0CAGTb,EAAAU,UAAAI,gBAAA,WACIZ,KAAKa,YACLb,KAAKc,aAAc,GAGvBhB,EAAAU,UAAAO,cAAA,SAAcC,GACV,GAAIhB,KAAKiB,MAAO,CACZ,IAAIC,EAAUlB,KAAKiB,MAAME,kBAAkBH,GACvCI,EAAUpB,KAAKiB,MAAMI,kBAAkBL,GACvCE,GAASA,EAAQ,IAAIE,GACrBpB,KAAKI,aAAakB,KAAK,CAACC,cAAeP,EAAOE,QAASA,EAAQ,GAAIE,QAASA,MAKxFtB,EAAAU,UAAAK,UAAA,WACI,IAAIW,EAAOxB,KAAKC,SAAS,GACzBuB,EAAKrB,WAAaH,KAAKG,WAGnBqB,EAAKrB,aAAaH,KAAKyB,QAAQzB,KAAK0B,SACpCF,EAAKG,qBAAsB,GAG/B3B,KAAKiB,MAAQ,IAAIW,EAAM5B,KAAKD,GAAG8B,cAAcC,SAAS,GAAGA,SAAS,GAAI,CAClEC,KAAM/B,KAAK+B,KACXC,KAAMhC,KAAKgC,KACX/B,QAASD,KAAKC,QACdC,QAASF,KAAKE,WAItBJ,EAAAU,UAAAyB,UAAA,WACI,OAAOjC,KAAKD,GAAG8B,cAAcC,SAAS,GAAGA,SAAS,IAGtDhC,EAAAU,UAAA0B,eAAA,WACI,OAAOlC,KAAKiB,MAAMkB,iBAGtBrC,EAAAU,UAAA4B,eAAA,WACI,GAAIpC,KAAKiB,MACL,OAAOjB,KAAKiB,MAAMmB,kBAI1BtC,EAAAU,UAAA6B,QAAA,WACQrC,KAAKiB,OACLjB,KAAKiB,MAAMqB,UAInBxC,EAAAU,UAAAG,OAAA,WACQX,KAAKiB,QACLjB,KAAKiB,MAAMsB,UACXvC,KAAKa,cAIbf,EAAAU,UAAAgC,YAAA,WACQxC,KAAKiB,QACLjB,KAAKiB,MAAMsB,UACXvC,KAAKc,aAAc,EACnBd,KAAKiB,MAAQ,gDA1EEwB,EAAAA,cApBdC,EAAA,CAARC,EAAAA,oCAEQD,EAAA,CAARC,EAAAA,uCAEQD,EAAA,CAARC,EAAAA,uCAEQD,EAAA,CAARC,EAAAA,qCAEQD,EAAA,CAARC,EAAAA,sCAEQD,EAAA,CAARC,EAAAA,0CAESD,EAAA,CAATE,EAAAA,6CAUQF,EAAA,CAARC,EAAAA,kCAxBQ7C,EAAO4C,EAAA,CATnBG,EAAAA,UAAU,CACPC,SAAU,UACVC,SAAU,qVAKVC,gBAAiBC,EAAAA,wBAAwBC,WAEhCpD,GAbb,gBAuHA,SAAAqD,KAA2B,OAAdA,EAAWT,EAAA,CALvBU,EAAAA,SAAS,CACNC,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACzD,GACV0D,aAAc,CAAC1D,MAENqD","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewInit,OnDestroy,Input,Output,EventEmitter,ChangeDetectionStrategy} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport * as Chart from 'chart.js';\r\n\r\n@Component({\r\n    selector: 'p-chart',\r\n    template: `\r\n        <div style=\"position:relative\" [style.width]=\"responsive && !width ? null : width\" [style.height]=\"responsive && !height ? null : height\">\r\n            <canvas [attr.width]=\"responsive && !width ? null : width\" [attr.height]=\"responsive && !height ? null : height\" (click)=\"onCanvasClick($event)\"></canvas>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class UIChart implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() type: string;\r\n\r\n    @Input() options: any = {};\r\n\r\n    @Input() plugins: any[] = [];\r\n    \r\n    @Input() width: string;\r\n    \r\n    @Input() height: string;\r\n\r\n    @Input() responsive: boolean = true;\r\n    \r\n    @Output() onDataSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n    initialized: boolean;\r\n    \r\n    _data: any;\r\n\r\n    chart: any;\r\n\r\n    constructor(public el: ElementRef) {}\r\n    \r\n    @Input() get data(): any {\r\n        return this._data;\r\n    }\r\n\r\n    set data(val:any) {\r\n        this._data = val;\r\n        this.reinit();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initChart();\r\n        this.initialized = true;\r\n    }\r\n\r\n    onCanvasClick(event) {\r\n        if (this.chart) {\r\n            let element = this.chart.getElementAtEvent(event);\r\n            let dataset = this.chart.getDatasetAtEvent(event);\r\n            if (element&&element[0]&&dataset) {\r\n                this.onDataSelect.emit({originalEvent: event, element: element[0], dataset: dataset});\r\n            }\r\n        }\r\n    }\r\n\r\n    initChart() {\r\n        let opts = this.options||{};\r\n        opts.responsive = this.responsive;\r\n\r\n        // allows chart to resize in responsive mode\r\n        if (opts.responsive&&(this.height||this.width)) {\r\n            opts.maintainAspectRatio = false;\r\n        }\r\n\r\n        this.chart = new Chart(this.el.nativeElement.children[0].children[0], {\r\n            type: this.type,\r\n            data: this.data,\r\n            options: this.options,\r\n            plugins: this.plugins\r\n        });\r\n    }\r\n    \r\n    getCanvas() {\r\n        return this.el.nativeElement.children[0].children[0];\r\n    }\r\n    \r\n    getBase64Image() {\r\n        return this.chart.toBase64Image();\r\n    }\r\n    \r\n    generateLegend() {\r\n        if (this.chart) {\r\n            return this.chart.generateLegend();\r\n        }\r\n    }\r\n    \r\n    refresh() {\r\n        if (this.chart) {\r\n            this.chart.update();\r\n        }\r\n    }\r\n    \r\n    reinit() {\r\n        if (this.chart) {\r\n            this.chart.destroy();\r\n            this.initChart();\r\n        }\r\n    }\r\n    \r\n    ngOnDestroy() {\r\n        if (this.chart) {\r\n            this.chart.destroy();\r\n            this.initialized = false;\r\n            this.chart = null;\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [UIChart],\r\n    declarations: [UIChart]\r\n})\r\nexport class ChartModule { }\r\n"]}