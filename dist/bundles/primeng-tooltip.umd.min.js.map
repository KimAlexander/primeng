{"version":3,"sources":["ng://primeng/tooltip/tooltip.ts"],"names":["Tooltip","el","zone","this","tooltipPosition","tooltipEvent","appendTo","tooltipZIndex","escape","Object","defineProperty","prototype","_disabled","val","deactivate","ngAfterViewInit","_this","runOutsideAngular","mouseEnterListener","onMouseEnter","bind","mouseLeaveListener","onMouseLeave","clickListener","onClick","nativeElement","addEventListener","focusListener","onFocus","blurListener","onBlur","e","container","showTimeout","activate","active","clearHideTimeout","showDelay","setTimeout","show","life","duration","hideTimeout","hide","clearShowTimeout","hideDelay","_text","text","offsetParent","updateText","align","create","document","createElement","tooltipArrow","className","appendChild","tooltipText","positionStyle","style","position","body","DomHandler","display","disabled","fadeIn","zIndex","zindex","bindDocumentResizeListener","remove","innerHTML","createTextNode","alignTop","isOutOfBounds","alignBottom","alignRight","alignLeft","getHostOffset","offset","getBoundingClientRect","left","getWindowScrollLeft","top","getWindowScrollTop","preAlign","hostOffset","getOuterWidth","getOuterHeight","defaultClassName","tooltipStyleClass","targetTop","targetLeft","width","height","viewport","getViewport","onWindowResize","resizeListener","window","unbindDocumentResizeListener","removeEventListener","unbindEvents","parentElement","removeChild","clearTimeouts","clearTimeout","ngOnDestroy","ElementRef","NgZone","__decorate","Input","Directive","selector","TooltipModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { NgModule, Directive, ElementRef, AfterViewInit, OnDestroy, Input, NgZone } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DomHandler } from 'primeng/dom';\r\n\r\n@Directive({\r\n    selector: '[pTooltip]'\r\n})\r\nexport class Tooltip implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() tooltipPosition: string = 'right';\r\n\r\n    @Input() tooltipEvent: string = 'hover';\r\n\r\n    @Input() appendTo: any = 'body';\r\n\r\n    @Input() positionStyle: string;\r\n\r\n    @Input() tooltipStyleClass: string;\r\n\r\n    @Input() tooltipZIndex: string = 'auto';\r\n\r\n    @Input() escape: boolean = true;\r\n\r\n    @Input() showDelay: number;\r\n\r\n    @Input() hideDelay: number;\r\n\r\n    @Input() life: number;\r\n\r\n    @Input(\"tooltipDisabled\") get disabled(): boolean {\r\n        return this._disabled;\r\n    }\r\n    set disabled(val:boolean) {\r\n        this._disabled = val;\r\n        this.deactivate();\r\n    }\r\n\r\n    _disabled: boolean;\r\n\r\n    container: any;\r\n\r\n    styleClass: string;\r\n\r\n    tooltipText: any;\r\n\r\n    showTimeout: any;\r\n\r\n    hideTimeout: any;\r\n\r\n    active: boolean;\r\n\r\n    _text: string;\r\n\r\n    mouseEnterListener: Function;\r\n\r\n    mouseLeaveListener: Function;\r\n\r\n    clickListener: Function;\r\n\r\n    focusListener: Function;\r\n\r\n    blurListener: Function;\r\n\r\n    resizeListener: any;\r\n\r\n    constructor(public el: ElementRef, public zone: NgZone) { }\r\n\r\n    ngAfterViewInit() {\r\n        this.zone.runOutsideAngular(() => {\r\n            if (this.tooltipEvent === 'hover') {\r\n                this.mouseEnterListener = this.onMouseEnter.bind(this);\r\n                this.mouseLeaveListener = this.onMouseLeave.bind(this);\r\n                this.clickListener = this.onClick.bind(this);\r\n                this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\r\n                this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\r\n                this.el.nativeElement.addEventListener('click', this.clickListener);\r\n            }\r\n            else if (this.tooltipEvent === 'focus') {\r\n                this.focusListener = this.onFocus.bind(this);\r\n                this.blurListener = this.onBlur.bind(this);\r\n                this.el.nativeElement.addEventListener('focus', this.focusListener);\r\n                this.el.nativeElement.addEventListener('blur', this.blurListener);\r\n            }\r\n        });\r\n    }\r\n\r\n    onMouseEnter(e: Event) {\r\n        if (!this.container && !this.showTimeout) {\r\n            this.activate();\r\n        }\r\n    }\r\n    \r\n    onMouseLeave(e: Event) {\r\n        this.deactivate();\r\n    }\r\n    \r\n    onFocus(e: Event) {\r\n        this.activate();\r\n    }\r\n    \r\n    onBlur(e: Event) {\r\n        this.deactivate();\r\n    }\r\n  \r\n    onClick(e: Event) {\r\n        this.deactivate();\r\n    }\r\n\r\n    activate() {\r\n        this.active = true;\r\n        this.clearHideTimeout();\r\n\r\n        if (this.showDelay)\r\n            this.showTimeout = setTimeout(() => { this.show() }, this.showDelay);\r\n        else\r\n            this.show();\r\n\r\n        if (this.life) {\r\n            let duration = this.showDelay ? this.life + this.showDelay : this.life;\r\n            this.hideTimeout = setTimeout(() => { this.hide() }, duration);\r\n        }\r\n    }\r\n\r\n    deactivate() {\r\n        this.active = false;\r\n        this.clearShowTimeout();\r\n\r\n        if (this.hideDelay) {\r\n            this.clearHideTimeout();    //life timeout\r\n            this.hideTimeout = setTimeout(() => { this.hide() }, this.hideDelay);\r\n        }\r\n        else {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    @Input('pTooltip') set text(text: string) {\r\n        this._text = text;\r\n        if (this.active) {\r\n            if (this._text) {\r\n                if (this.container && this.container.offsetParent) {\r\n                    this.updateText();\r\n\t\t\t\t\tthis.align();\r\n\t\t\t\t}\r\n                else {\r\n                    this.show();\r\n                }\r\n            }\r\n            else {\r\n                this.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    create() {\r\n        this.container = document.createElement('div');\r\n\r\n        let tooltipArrow = document.createElement('div');\r\n        tooltipArrow.className = 'ui-tooltip-arrow';\r\n        this.container.appendChild(tooltipArrow);\r\n\r\n        this.tooltipText = document.createElement('div');\r\n        this.tooltipText.className = 'ui-tooltip-text ui-shadow ui-corner-all';\r\n\r\n        this.updateText();\r\n\r\n        if (this.positionStyle) {\r\n            this.container.style.position = this.positionStyle;\r\n        }\r\n\r\n        this.container.appendChild(this.tooltipText);\r\n\r\n        if (this.appendTo === 'body')\r\n            document.body.appendChild(this.container);\r\n        else if (this.appendTo === 'target')\r\n            DomHandler.appendChild(this.container, this.el.nativeElement);\r\n        else\r\n            DomHandler.appendChild(this.container, this.appendTo);\r\n\r\n        this.container.style.display = 'inline-block';\r\n    }\r\n\r\n    show() {\r\n        if (!this.text || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.create();\r\n        this.align();\r\n        DomHandler.fadeIn(this.container, 250);\r\n\r\n        if (this.tooltipZIndex === 'auto')\r\n            this.container.style.zIndex = ++DomHandler.zindex;\r\n        else\r\n            this.container.style.zIndex = this.tooltipZIndex;\r\n\r\n        this.bindDocumentResizeListener();\r\n    }\r\n\r\n    hide() {\r\n        this.remove();\r\n    }\r\n\r\n    updateText() {\r\n        if (this.escape) {\r\n            this.tooltipText.innerHTML = '';\r\n            this.tooltipText.appendChild(document.createTextNode(this._text));\r\n        }\r\n        else {\r\n            this.tooltipText.innerHTML = this._text;\r\n        }\r\n    }\r\n\r\n    align() {\r\n        let position = this.tooltipPosition;\r\n\r\n        switch (position) {\r\n            case 'top':\r\n                this.alignTop();\r\n                if (this.isOutOfBounds()) {\r\n                    this.alignBottom();\r\n                    if (this.isOutOfBounds()) {\r\n                        this.alignRight();\r\n\r\n                        if (this.isOutOfBounds()) {\r\n                            this.alignLeft();\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case 'bottom':\r\n                this.alignBottom();\r\n                if (this.isOutOfBounds()) {\r\n                    this.alignTop();\r\n                    if (this.isOutOfBounds()) {\r\n                        this.alignRight();\r\n\r\n                        if (this.isOutOfBounds()) {\r\n                            this.alignLeft();\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case 'left':\r\n                this.alignLeft();\r\n                if (this.isOutOfBounds()) {\r\n                    this.alignRight();\r\n\r\n                    if (this.isOutOfBounds()) {\r\n                        this.alignTop();\r\n\r\n                        if (this.isOutOfBounds()) {\r\n                            this.alignBottom();\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case 'right':\r\n                this.alignRight();\r\n                if (this.isOutOfBounds()) {\r\n                    this.alignLeft();\r\n\r\n                    if (this.isOutOfBounds()) {\r\n                        this.alignTop();\r\n\r\n                        if (this.isOutOfBounds()) {\r\n                            this.alignBottom();\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    getHostOffset() {\r\n        if (this.appendTo === 'body' || this.appendTo === 'target') {\r\n            let offset = this.el.nativeElement.getBoundingClientRect();\r\n            let targetLeft = offset.left + DomHandler.getWindowScrollLeft();\r\n            let targetTop = offset.top + DomHandler.getWindowScrollTop();\r\n    \r\n            return { left: targetLeft, top: targetTop };\r\n        }\r\n        else {\r\n            return { left: 0, top: 0 };\r\n        }\r\n    }\r\n\r\n    alignRight() {\r\n        this.preAlign('right');\r\n        let hostOffset = this.getHostOffset();\r\n        let left = hostOffset.left + DomHandler.getOuterWidth(this.el.nativeElement);\r\n        let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\r\n        this.container.style.left = left + 'px';\r\n        this.container.style.top = top + 'px';\r\n    }\r\n\r\n    alignLeft() {\r\n        this.preAlign('left');\r\n        let hostOffset = this.getHostOffset();\r\n        let left = hostOffset.left - DomHandler.getOuterWidth(this.container);\r\n        let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\r\n        this.container.style.left = left + 'px';\r\n        this.container.style.top = top + 'px';\r\n    }\r\n\r\n    alignTop() {\r\n        this.preAlign('top');\r\n        let hostOffset = this.getHostOffset();\r\n        let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\r\n        let top = hostOffset.top - DomHandler.getOuterHeight(this.container);\r\n        this.container.style.left = left + 'px';\r\n        this.container.style.top = top + 'px';\r\n    }\r\n\r\n    alignBottom() {\r\n        this.preAlign('bottom');\r\n        let hostOffset = this.getHostOffset();\r\n        let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\r\n        let top = hostOffset.top + DomHandler.getOuterHeight(this.el.nativeElement);\r\n        this.container.style.left = left + 'px';\r\n        this.container.style.top = top + 'px';\r\n    }\r\n\r\n    preAlign(position: string) {\r\n        this.container.style.left = -999 + 'px';\r\n        this.container.style.top = -999 + 'px';\r\n\r\n        let defaultClassName = 'ui-tooltip ui-widget ui-tooltip-' + position;\r\n        this.container.className = this.tooltipStyleClass ? defaultClassName + ' ' + this.tooltipStyleClass : defaultClassName;\r\n    }\r\n\r\n    isOutOfBounds(): boolean {\r\n        let offset = this.container.getBoundingClientRect();\r\n        let targetTop = offset.top;\r\n        let targetLeft = offset.left;\r\n        let width = DomHandler.getOuterWidth(this.container);\r\n        let height = DomHandler.getOuterHeight(this.container);\r\n        let viewport = DomHandler.getViewport();\r\n\r\n        return (targetLeft + width > viewport.width) || (targetLeft < 0) || (targetTop < 0) || (targetTop + height > viewport.height);\r\n    }\r\n\r\n    onWindowResize(e: Event) {\r\n        this.hide();\r\n    }\r\n\r\n    bindDocumentResizeListener() {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.resizeListener = this.onWindowResize.bind(this);\r\n            window.addEventListener('resize', this.resizeListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentResizeListener() {\r\n        if (this.resizeListener) {\r\n            window.removeEventListener('resize', this.resizeListener);\r\n            this.resizeListener = null;\r\n        }\r\n    }\r\n\r\n    unbindEvents() {\r\n        if (this.tooltipEvent === 'hover') {\r\n            this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\r\n            this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\r\n            this.el.nativeElement.removeEventListener('click', this.clickListener);\r\n        }\r\n        else if (this.tooltipEvent === 'focus') {\r\n            this.el.nativeElement.removeEventListener('focus', this.focusListener);\r\n            this.el.nativeElement.removeEventListener('blur', this.blurListener);\r\n        }\r\n\r\n        this.unbindDocumentResizeListener();\r\n    }\r\n\r\n    remove() {\r\n        if (this.container && this.container.parentElement) {\r\n            if (this.appendTo === 'body')\r\n                document.body.removeChild(this.container);\r\n            else if (this.appendTo === 'target')\r\n                this.el.nativeElement.removeChild(this.container);\r\n            else\r\n                DomHandler.removeChild(this.container, this.appendTo);\r\n        }\r\n\r\n        this.unbindDocumentResizeListener();\r\n        this.clearTimeouts();\r\n        this.container = null;\r\n    }\r\n\r\n    clearShowTimeout() {\r\n        if (this.showTimeout) {\r\n            clearTimeout(this.showTimeout);\r\n            this.showTimeout = null;\r\n        }\r\n    }\r\n\r\n    clearHideTimeout() {\r\n        if (this.hideTimeout) {\r\n            clearTimeout(this.hideTimeout);\r\n            this.hideTimeout = null;\r\n        }\r\n    }\r\n\r\n    clearTimeouts() {\r\n        this.clearShowTimeout();\r\n        this.clearHideTimeout();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unbindEvents();\r\n        this.remove();\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Tooltip],\r\n    declarations: [Tooltip]\r\n})\r\nexport class TooltipModule { }\r\n"]}