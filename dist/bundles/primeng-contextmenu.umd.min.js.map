{"version":3,"sources":["ng://primeng/contextmenu/contextmenu.ts"],"names":["ContextMenuSub","contextMenu","this","Object","defineProperty","prototype","_parentActive","value","activeItem","onItemMouseEnter","event","item","menuitem","hideTimeout","clearTimeout","disabled","nextElement","children","nextElementSibling","sublist","style","zIndex","DomHandler","zindex","position","itemClick","preventDefault","command","originalEvent","items","hide","listClick","containerOffset","getOffset","parentElement","viewport","getViewport","sublistWidth","offsetParent","offsetWidth","getHiddenElementOuterWidth","itemOuterWidth","getOuterWidth","itemOuterHeight","getOuterHeight","sublistHeight","offsetHeight","getHiddenElementOuterHeight","parseInt","top","height","calculateScrollbarHeight","bottom","left","width","calculateScrollbarWidth","Inject","args","forwardRef","ContextMenu","__decorate","Input","Component","selector","template","__param","el","renderer","zone","autoZIndex","baseZIndex","triggerEvent","onShow","EventEmitter","onHide","ngAfterViewInit","_this","global","triggerEventListener","listen","show","target","stopPropagation","appendTo","document","body","appendChild","containerViewChild","nativeElement","moveOnTop","display","parentActive","fadeIn","bindGlobalListeners","emit","unbindGlobalListeners","String","toggle","pageX","top_1","pageY","scrollLeft","scrollTop","documentClickListener","isOutsideClicked","button","runOutsideAngular","windowResizeListener","onWindowResize","bind","window","addEventListener","removeEventListener","isSameNode","contains","ngOnDestroy","ElementRef","Renderer2","NgZone","Output","ViewChild","changeDetection","ChangeDetectionStrategy","Default","ContextMenuModule","NgModule","imports","CommonModule","RouterModule","exports","declarations"],"mappings":"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","sourcesContent":["import { NgModule,Component,ElementRef,AfterViewInit,OnDestroy,Input,Output,Renderer2,Inject,forwardRef,ViewChild,NgZone,EventEmitter,ChangeDetectionStrategy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DomHandler } from 'primeng/dom';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'p-contextMenuSub',\r\n    template: `\r\n        <ul [ngClass]=\"{'ui-widget-content ui-corner-all ui-submenu-list ui-shadow':!root}\" class=\"ui-menu-list\">\r\n            <ng-template ngFor let-child [ngForOf]=\"(root ? item : item.items)\">\r\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': child.visible === false}\" role=\"separator\">\r\n                <li *ngIf=\"!child.separator\" #item [ngClass]=\"{'ui-menuitem ui-corner-all':true,'ui-menuitem-active':item==activeItem,'ui-helper-hidden': child.visible === false}\"\r\n                    (mouseenter)=\"onItemMouseEnter($event,item,child)\" role=\"none\">\r\n                    <a *ngIf=\"!child.routerLink\" [attr.href]=\"child.url\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" [attr.tabindex]=\"child.tabindex ? child.tabindex : '0'\" (click)=\"itemClick($event, child)\"\r\n                        [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':child.disabled}\" [ngStyle]=\"child.style\" [class]=\"child.styleClass\"\r\n                        [attr.aria-haspopup]=\"item.items != null\" [attr.aria-expanded]=\"item === activeItem\">\r\n                        <span class=\"ui-submenu-icon pi pi-fw pi-caret-right\" *ngIf=\"child.items\"></span>\r\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\r\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\r\n                    </a>\r\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" role=\"menuitem\"\r\n                        [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" [attr.tabindex]=\"child.tabindex ? child.tabindex : '0'\"\r\n                        (click)=\"itemClick($event, child)\" [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':child.disabled}\"\r\n                        [ngStyle]=\"child.style\" [class]=\"child.styleClass\"\r\n                        [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\r\n                        <span class=\"ui-submenu-icon pi pi-fw pi-caret-right\" *ngIf=\"child.items\"></span>\r\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\r\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\r\n                    </a>\r\n                    <p-contextMenuSub class=\"ui-submenu\" [parentActive]=\"item==activeItem\" [item]=\"child\" *ngIf=\"child.items\"></p-contextMenuSub>\r\n                </li>\r\n            </ng-template>\r\n        </ul>\r\n    `\r\n})\r\nexport class ContextMenuSub {\r\n\r\n    @Input() item: MenuItem;\r\n\r\n    @Input() root: boolean;\r\n\r\n    @Input() get parentActive(): boolean {\r\n        return this._parentActive;\r\n    }\r\n    set parentActive(value) {\r\n        this._parentActive = value;\r\n        if (!value) {\r\n            this.activeItem = null;\r\n        }\r\n    }\r\n\r\n    contextMenu: ContextMenu;\r\n\r\n    constructor(@Inject(forwardRef(() => ContextMenu)) contextMenu) {\r\n        this.contextMenu = contextMenu as ContextMenu;\r\n    }\r\n\r\n    activeItem: any;\r\n\r\n    containerOffset: any;\r\n\r\n    hideTimeout: any;\r\n\r\n    _parentActive: boolean;\r\n\r\n    onItemMouseEnter(event, item, menuitem) {\r\n        if (this.hideTimeout) {\r\n            clearTimeout(this.hideTimeout);\r\n            this.hideTimeout = null;\r\n        }\r\n\r\n        if (menuitem.disabled) {\r\n            return;\r\n        }\r\n        \r\n        this.activeItem = item;\r\n        \r\n        let nextElement = item.children[0].nextElementSibling;\r\n        if (nextElement) {\r\n            let sublist = nextElement.children[0];\r\n            sublist.style.zIndex = ++DomHandler.zindex;\r\n            this.position(sublist, item);\r\n        }\r\n    }\r\n\r\n    itemClick(event, item: MenuItem) Â {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (item.items)\r\n            event.preventDefault();\r\n        else\r\n            this.contextMenu.hide();\r\n    }\r\n\r\n    listClick(event) {\r\n        this.activeItem = null;\r\n    }\r\n\r\n    position(sublist, item) {\r\n        this.containerOffset = DomHandler.getOffset(item.parentElement)\r\n        let viewport = DomHandler.getViewport();\r\n        let sublistWidth = sublist.offsetParent ? sublist.offsetWidth : DomHandler.getHiddenElementOuterWidth(sublist);\r\n        let itemOuterWidth = DomHandler.getOuterWidth(item.children[0]);\r\n        let itemOuterHeight = DomHandler.getOuterHeight(item.children[0]);\r\n        let sublistHeight = sublist.offsetHeight ? sublist.offsetHeight : DomHandler.getHiddenElementOuterHeight(sublist);\r\n\r\n        if ((parseInt(this.containerOffset.top) + itemOuterHeight + sublistHeight) > (viewport.height - DomHandler.calculateScrollbarHeight())) {\r\n            sublist.style.bottom = '0px';\r\n        }\r\n        else {\r\n            sublist.style.top = '0px';\r\n        }\r\n\r\n        if ((parseInt(this.containerOffset.left) + itemOuterWidth + sublistWidth) > (viewport.width - DomHandler.calculateScrollbarWidth())) {\r\n            sublist.style.left = -sublistWidth + 'px';\r\n        }\r\n        else {\r\n            sublist.style.left = itemOuterWidth + 'px';\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n    selector: 'p-contextMenu',\r\n    template: `\r\n        <div #container [ngClass]=\"'ui-contextmenu ui-widget ui-widget-content ui-corner-all ui-shadow'\"\r\n            [class]=\"styleClass\" [ngStyle]=\"style\">\r\n            <p-contextMenuSub [item]=\"model\" [parentActive]=\"parentActive\" root=\"root\"></p-contextMenuSub>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class ContextMenu implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() model: MenuItem[];\r\n\r\n    @Input() global: boolean;\r\n\r\n    @Input() target: any;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() appendTo: any;\r\n\r\n    @Input() autoZIndex: boolean = true;\r\n\r\n    @Input() baseZIndex: number = 0;\r\n\r\n    @Input() triggerEvent: string = 'contextmenu';\r\n\r\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild('container') containerViewChild: ElementRef;\r\n\r\n    parentActive: boolean;\r\n\r\n    documentClickListener: any;\r\n\r\n    windowResizeListener: any;\r\n\r\n    triggerEventListener: any;\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2, public zone: NgZone) { }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.global) {\r\n            this.triggerEventListener = this.renderer.listen('document', this.triggerEvent, (event) => {\r\n                this.show(event);\r\n                event.preventDefault();\r\n            });\r\n        }\r\n        else if (this.target) {\r\n            this.triggerEventListener = this.renderer.listen(this.target, this.triggerEvent, (event) => {\r\n                this.show(event);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (this.appendTo) {\r\n            if (this.appendTo === 'body')\r\n                document.body.appendChild(this.containerViewChild.nativeElement);\r\n            else\r\n                DomHandler.appendChild(this.containerViewChild.nativeElement, this.appendTo);\r\n        }\r\n    }\r\n\r\n    show(event?: MouseEvent) {\r\n        this.position(event);\r\n        this.moveOnTop();\r\n        this.containerViewChild.nativeElement.style.display = 'block';\r\n        this.parentActive = true;\r\n        DomHandler.fadeIn(this.containerViewChild.nativeElement, 250);\r\n        this.bindGlobalListeners();\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        this.onShow.emit();\r\n    }\r\n\r\n    hide() {\r\n        this.containerViewChild.nativeElement.style.display = 'none';\r\n        this.parentActive = false;\r\n        this.unbindGlobalListeners();\r\n        this.onHide.emit();\r\n    }\r\n\r\n    moveOnTop() {\r\n        if (this.autoZIndex) {\r\n            this.containerViewChild.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\r\n        }\r\n    }\r\n\r\n    toggle(event?: MouseEvent) {\r\n        if (this.containerViewChild.nativeElement.offsetParent)\r\n            this.hide();\r\n        else\r\n            this.show(event);\r\n    }\r\n\r\n    position(event?: MouseEvent) {\r\n        if (event) {\r\n            let left = event.pageX + 1;\r\n            let top = event.pageY + 1;\r\n            let width = this.containerViewChild.nativeElement.offsetParent ? this.containerViewChild.nativeElement.offsetWidth : DomHandler.getHiddenElementOuterWidth(this.containerViewChild.nativeElement);\r\n            let height = this.containerViewChild.nativeElement.offsetParent ? this.containerViewChild.nativeElement.offsetHeight : DomHandler.getHiddenElementOuterHeight(this.containerViewChild.nativeElement);\r\n            let viewport = DomHandler.getViewport();\r\n\r\n            //flip\r\n            if (left + width - document.body.scrollLeft > viewport.width) {\r\n                left -= width;\r\n            }\r\n\r\n            //flip\r\n            if (top + height - document.body.scrollTop > viewport.height) {\r\n                top -= height;\r\n            }\r\n\r\n            //fit\r\n            if (left < document.body.scrollLeft) {\r\n                left = document.body.scrollLeft;\r\n            }\r\n\r\n            //fit\r\n            if (top < document.body.scrollTop) {\r\n                top = document.body.scrollTop;\r\n            }\r\n\r\n            this.containerViewChild.nativeElement.style.left = left + 'px';\r\n            this.containerViewChild.nativeElement.style.top = top + 'px';\r\n        }\r\n    }\r\n\r\n    bindGlobalListeners() {\r\n        if (!this.documentClickListener) {\r\n            this.documentClickListener = this.renderer.listen('document', 'click', (event) => {\r\n                if (this.containerViewChild.nativeElement.offsetParent && this.isOutsideClicked(event) && event.button !== 2) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            if (!this.windowResizeListener) {\r\n                this.windowResizeListener = this.onWindowResize.bind(this);\r\n                window.addEventListener('resize', this.windowResizeListener);\r\n            }\r\n        });\r\n    }\r\n\r\n    unbindGlobalListeners() {\r\n        if (this.documentClickListener) {\r\n            this.documentClickListener();\r\n            this.documentClickListener = null;\r\n        }\r\n\r\n        if (this.windowResizeListener) {\r\n            window.removeEventListener('resize', this.windowResizeListener);\r\n            this.windowResizeListener = null;\r\n        }\r\n    }\r\n\r\n    onWindowResize(event) {\r\n        if (this.containerViewChild.nativeElement.offsetParent) {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    isOutsideClicked(event: Event) {\r\n        return !(this.containerViewChild.nativeElement.isSameNode(event.target) || this.containerViewChild.nativeElement.contains(event.target));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unbindGlobalListeners();\r\n\r\n        if (this.triggerEventListener) {\r\n            this.triggerEventListener();\r\n        }\r\n\r\n        if (this.appendTo) {\r\n            this.el.nativeElement.appendChild(this.containerViewChild.nativeElement);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule, RouterModule],\r\n    exports: [ContextMenu, RouterModule],\r\n    declarations: [ContextMenu, ContextMenuSub]\r\n})\r\nexport class ContextMenuModule { }\r\n"]}