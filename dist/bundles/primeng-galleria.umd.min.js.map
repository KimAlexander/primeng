{"version":3,"sources":["ng://primeng/galleria/galleria.ts"],"names":["Galleria","el","this","panelWidth","panelHeight","frameWidth","frameHeight","activeIndex","showFilmstrip","autoPlay","transitionInterval","showCaption","effectDuration","onImageClicked","EventEmitter","onImageChange","stripLeft","prototype","ngAfterViewChecked","_this","imagesChanged","stopSlideshow","Promise","resolve","then","render","Object","defineProperty","_images","value","initialized","ngAfterViewInit","container","nativeElement","children","panelWrapper","DomHandler","findSingle","stripWrapper","strip","images","length","panels","find","frames","style","width","height","caption","bottom","getOuterHeight","startSlideshow","visibility","interval","setInterval","next","slideshowActive","clearInterval","clickNavRight","clickNavLeft","prev","frameClick","frame","select","index","reposition","newPanel","fadeIn","newFrame","undefined","frameLeft","offsetLeft","stepFactor","parseInt","getComputedStyle","frameViewportLeft","emit","clickImage","event","image","i","originalEvent","ngOnDestroy","ElementRef","__decorate","Input","Output","Component","selector","template","changeDetection","ChangeDetectionStrategy","Default","GalleriaModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewChecked,AfterViewInit,OnDestroy,Input,Output,EventEmitter,ChangeDetectionStrategy} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from 'primeng/dom';\r\n\r\n@Component({\r\n    selector: 'p-galleria',\r\n    template: `\r\n        <div [ngClass]=\"{'ui-galleria ui-widget ui-widget-content ui-corner-all':true}\" [ngStyle]=\"style\" [class]=\"styleClass\" [style.width.px]=\"panelWidth\">\r\n            <ul class=\"ui-galleria-panel-wrapper\" [style.width.px]=\"panelWidth\" [style.height.px]=\"panelHeight\">\r\n                <li *ngFor=\"let image of images;let i=index\" class=\"ui-galleria-panel\" [ngClass]=\"{'ui-helper-hidden':i!=activeIndex}\"\r\n                    [style.width.px]=\"panelWidth\" [style.height.px]=\"panelHeight\" (click)=\"clickImage($event,image,i)\">\r\n                    <img class=\"ui-panel-images\" [src]=\"image.source\" [alt]=\"image.alt\" [title]=\"image.title\"/>\r\n                </li>\r\n            </ul>\r\n            <div [ngClass]=\"{'ui-galleria-filmstrip-wrapper':true}\" *ngIf=\"showFilmstrip\">\r\n                <ul class=\"ui-galleria-filmstrip\" style=\"transition:left 1s\" [style.left.px]=\"stripLeft\">\r\n                    <li #frame *ngFor=\"let image of images;let i=index\" [ngClass]=\"{'ui-galleria-frame-active':i==activeIndex}\" class=\"ui-galleria-frame\" (click)=\"frameClick(frame)\"\r\n                        [style.width.px]=\"frameWidth\" [style.height.px]=\"frameHeight\" [style.transition]=\"'opacity 0.75s ease'\">\r\n                        <div class=\"ui-galleria-frame-content\">\r\n                            <img [src]=\"image.source\" [alt]=\"image.alt\" [title]=\"image.title\" class=\"ui-galleria-frame-image\"\r\n                                [style.width.px]=\"frameWidth\" [style.height.px]=\"frameHeight\">\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"ui-galleria-nav-prev pi pi-fw pi-chevron-left\" (click)=\"clickNavLeft()\" [style.bottom.px]=\"frameHeight/2\" *ngIf=\"activeIndex !== 0\"></div>\r\n            <div class=\"ui-galleria-nav-next pi pi-fw pi-chevron-right\" (click)=\"clickNavRight()\" [style.bottom.px]=\"frameHeight/2\"></div>\r\n            <div class=\"ui-galleria-caption\" *ngIf=\"showCaption&&images\" style=\"display:block\">\r\n                <h4>{{images[activeIndex]?.title}}</h4><p>{{images[activeIndex]?.alt}}</p>\r\n            </div>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class Galleria implements AfterViewChecked,AfterViewInit,OnDestroy {\r\n        \r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() panelWidth: number = 600;\r\n\r\n    @Input() panelHeight: number = 400;\r\n\r\n    @Input() frameWidth: number = 60;\r\n    \r\n    @Input() frameHeight: number = 40;\r\n\r\n    @Input() activeIndex: number = 0;\r\n\r\n    @Input() showFilmstrip: boolean = true;\r\n\r\n    @Input() autoPlay: boolean = true;\r\n\r\n    @Input() transitionInterval: number = 4000;\r\n\r\n    @Input() showCaption: boolean = true;\r\n\r\n    @Input() effectDuration: number = 500;\r\n    \r\n    @Output() onImageClicked = new EventEmitter();\r\n\r\n    @Output() onImageChange = new EventEmitter();\r\n    \r\n    _images: any[];\r\n    \r\n    slideshowActive: boolean;\r\n    \r\n    public container: any;\r\n    \r\n    public panelWrapper: any;\r\n    \r\n    public panels: any;\r\n    \r\n    public caption: any;\r\n    \r\n    public stripWrapper: any;\r\n    \r\n    public strip: any;\r\n    \r\n    public frames: any;\r\n    \r\n    public interval: any;\r\n    \r\n    public stripLeft: number = 0;\r\n    \r\n    public imagesChanged: boolean;\r\n    \r\n    public initialized: boolean;\r\n\r\n    constructor(public el: ElementRef) {}\r\n    \r\n    ngAfterViewChecked() {\r\n        if (this.imagesChanged) {\r\n            this.stopSlideshow();\r\n            Promise.resolve(null).then(() => {\r\n                this.render();\r\n                this.imagesChanged = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    @Input() get images(): any[] {\r\n        return this._images;\r\n    }\r\n    set images(value:any[]) {\r\n        this._images = value;\r\n        this.imagesChanged = true;\r\n\r\n        if (this.initialized) {\r\n            this.activeIndex = 0;\r\n        }\r\n    }\r\n        \r\n    ngAfterViewInit() {\r\n        this.container = this.el.nativeElement.children[0];\r\n        this.panelWrapper = DomHandler.findSingle(this.el.nativeElement, 'ul.ui-galleria-panel-wrapper');\r\n        this.initialized = true;\r\n        \r\n        if (this.showFilmstrip) {\r\n            this.stripWrapper = DomHandler.findSingle(this.container,'div.ui-galleria-filmstrip-wrapper');\r\n            this.strip = DomHandler.findSingle(this.stripWrapper,'ul.ui-galleria-filmstrip');\r\n        }\r\n        \r\n        if (this.images && this.images.length) {\r\n            this.render();\r\n        } \r\n    }\r\n    \r\n    render() {\r\n        this.panels = DomHandler.find(this.panelWrapper, 'li.ui-galleria-panel'); \r\n        \r\n        if (this.showFilmstrip) {\r\n            this.frames = DomHandler.find(this.strip,'li.ui-galleria-frame');\r\n            this.stripWrapper.style.width = DomHandler.width(this.panelWrapper) - 50 + 'px';\r\n            this.stripWrapper.style.height = this.frameHeight + 'px';\r\n        }\r\n        \r\n        if (this.showCaption) {\r\n            this.caption = DomHandler.findSingle(this.container,'div.ui-galleria-caption');\r\n            this.caption.style.bottom = this.showFilmstrip ? DomHandler.getOuterHeight(this.stripWrapper,true) + 'px' : 0 + 'px';\r\n            this.caption.style.width = DomHandler.width(this.panelWrapper) + 'px';\r\n        }\r\n   \r\n        if (this.autoPlay) {\r\n            this.startSlideshow();\r\n        }\r\n        \r\n        this.container.style.visibility = 'visible';\r\n    }\r\n    \r\n    startSlideshow() {\r\n        this.interval = setInterval(() => {\r\n            this.next();\r\n        }, this.transitionInterval);\r\n        \r\n        this.slideshowActive = true;\r\n    }\r\n        \r\n    stopSlideshow() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n        }\r\n        \r\n        this.slideshowActive = false;\r\n    }\r\n    \r\n    clickNavRight() {\r\n        if (this.slideshowActive) {\r\n            this.stopSlideshow();\r\n        }\r\n        this.next();\r\n    } \r\n    \r\n    clickNavLeft() {\r\n        if (this.slideshowActive) {\r\n            this.stopSlideshow();\r\n        }\r\n        this.prev();\r\n    }\r\n    \r\n    frameClick(frame) {\r\n        if (this.slideshowActive) {\r\n            this.stopSlideshow();\r\n        }\r\n        \r\n        this.select(DomHandler.index(frame), false);\r\n    }\r\n    \r\n    prev() {\r\n        if (this.activeIndex !== 0) {\r\n            this.select(this.activeIndex - 1, true);\r\n        }\r\n    }\r\n    \r\n    next() {\r\n        if (this.activeIndex !== (this.panels.length-1)) {\r\n            this.select(this.activeIndex + 1, true);\r\n        }\r\n        else {\r\n            this.select(0, false);\r\n            this.stripLeft = 0;\r\n        }\r\n    }\r\n        \r\n    select(index, reposition) {\r\n        if (index !== this.activeIndex) {            \r\n            let oldPanel = this.panels[this.activeIndex],\r\n            newPanel = this.panels[index];\r\n            \r\n            DomHandler.fadeIn(newPanel, this.effectDuration);\r\n            \r\n            if (this.showFilmstrip) {\r\n                let oldFrame = this.frames[this.activeIndex],\r\n                newFrame = this.frames[index];\r\n                \r\n                if (reposition === undefined || reposition === true) {\r\n                    let frameLeft = newFrame.offsetLeft,\r\n                    stepFactor = this.frameWidth + parseInt(getComputedStyle(newFrame)['margin-right'], 10),\r\n                    stripLeft = this.strip.offsetLeft,\r\n                    frameViewportLeft = frameLeft + stripLeft,\r\n                    frameViewportRight = frameViewportLeft + this.frameWidth;\r\n                    \r\n                    if (frameViewportRight > DomHandler.width(this.stripWrapper))\r\n                        this.stripLeft -= stepFactor;\r\n                    else if (frameViewportLeft < 0)\r\n                        this.stripLeft += stepFactor;\r\n                }\r\n            }\r\n            \r\n            this.activeIndex = index;\r\n\r\n            this.onImageChange.emit({index: index});\r\n        }\r\n    }\r\n    \r\n    clickImage(event, image, i) {\r\n        this.onImageClicked.emit({originalEvent: event, image: image, index: i})\r\n    }\r\n        \r\n    ngOnDestroy() {\r\n        this.stopSlideshow();\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Galleria],\r\n    declarations: [Galleria]\r\n})\r\nexport class GalleriaModule { }"]}