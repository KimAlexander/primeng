{"version":3,"sources":["ng://primeng/dialog/dialog.ts"],"names":["idx","showAnimation","animation","style","transform","opacity","animate","hideAnimation","Dialog","el","renderer","zone","cd","this","draggable","resizable","closeOnEscape","closable","showHeader","blockScroll","autoZIndex","baseZIndex","minX","minY","focusOnShow","keepInViewport","focusTrap","transitionOptions","closeIcon","minimizeIcon","maximizeIcon","onShow","EventEmitter","onHide","visibleChange","onResizeInit","onResizeEnd","id","_style","_position","transformOptions","Object","defineProperty","prototype","_positionLeft","console","log","_positionTop","_responsive","_breakpoint","_visible","value","maskVisible","__assign","originalStyle","focus","focusable","DomHandler","findSingle","container","runOutsideAngular","setTimeout","close","event","emit","preventDefault","enableModality","_this","dismissableMask","maskClickListener","listen","wrapper","isSameNode","target","contains","modal","addClass","document","body","disableModality","unbindMaskClickListener","removeClass","destroyed","detectChanges","maximize","maximized","moveOnTop","zIndex","String","zindex","getMaskClass","maskClass","ui-dialog-mask","ui-widget-overlay","ui-dialog-visible","ui-dialog-mask-scrollblocker","getPositionClass","toString","pos","find","item","position","initDrag","hasClass","parentElement","dragging","lastPageX","pageX","lastPageY","pageY","isIE","margin","onKeydown","which","focusableElements","getFocusableElements","length","activeElement","focusedIndex","indexOf","shiftKey","onDrag","containerWidth","getOuterWidth","containerHeight","getOuterHeight","deltaX","deltaY","offset","getOffset","leftPos","left","topPos","top","viewport","getViewport","width","height","endDrag","resetPosition","initResize","resizing","onResize","contentHeight","contentViewChild","nativeElement","newWidth","newHeight","minWidth","minHeight","parseInt","resizeEnd","bindGlobalListeners","bindDocumentDragListener","bindDocumentDragEndListener","bindDocumentResizeListeners","bindDocumentEscapeListener","unbindGlobalListeners","unbindDocumentDragListener","unbindDocumentDragEndListener","unbindDocumentResizeListeners","unbindDocumentEscapeListener","documentDragListener","bind","window","addEventListener","removeEventListener","documentDragEndListener","documentResizeListener","documentResizeEndListener","documentEscapeListener","appendContainer","appendTo","appendChild","restoreAppend","onAnimationStart","toState","element","onAnimationEnd","onContainerDestroy","ngOnDestroy","ElementRef","Renderer2","NgZone","ChangeDetectorRef","__decorate","Input","ContentChildren","Header","descendants","Footer","ViewChild","Output","Component","selector","template","animations","trigger","transition","useAnimation","changeDetection","ChangeDetectionStrategy","Default","DialogModule","NgModule","imports","CommonModule","FocusTrapModule","exports","SharedModule","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,Renderer2,\r\n    ContentChildren,QueryList,ViewChild,NgZone, ChangeDetectorRef,ViewRef,ChangeDetectionStrategy} from '@angular/core';\r\nimport {trigger,style,transition,animate, AnimationEvent, animation, useAnimation} from '@angular/animations';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from 'primeng/dom';\r\nimport {Header,Footer,SharedModule} from 'primeng/api';\r\nimport {FocusTrapModule} from 'primeng/focustrap';\r\n\r\nlet idx: number = 0;\r\n\r\nconst showAnimation = animation([\r\n    style({ transform: '{{transform}}', opacity: 0 }),\r\n    animate('{{transition}}', style({ transform: 'none', opacity: 1 }))\r\n]);\r\n\r\nconst hideAnimation = animation([\r\n    animate('{{transition}}', style({ transform: '{{transform}}', opacity: 0 }))\r\n]);\r\n\r\n@Component({\r\n    selector: 'p-dialog',\r\n    template: `\r\n        <div [class]=\"maskStyleClass\" [ngClass]=\"getMaskClass()\" *ngIf=\"maskVisible\">\r\n            <div #container [ngClass]=\"{'ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow':true, 'ui-dialog-rtl':rtl,'ui-dialog-draggable':draggable,'ui-dialog-resizable':resizable, 'ui-dialog-maximized': maximized}\"\r\n                [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"visible\" pFocusTrap [pFocusTrapDisabled]=\"focusTrap === false\"\r\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" role=\"dialog\" [attr.aria-labelledby]=\"id + '-label'\">\r\n                <div #titlebar class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\" (mousedown)=\"initDrag($event)\" *ngIf=\"showHeader\">\r\n                    <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"header\">{{header}}</span>\r\n                    <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"headerFacet && headerFacet.first\">\r\n                        <ng-content select=\"p-header\"></ng-content>\r\n                    </span>\r\n                    <div class=\"ui-dialog-titlebar-icons\">\r\n                        <a *ngIf=\"maximizable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-maximize ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"maximize()\" (keydown.enter)=\"maximize()\">\r\n                            <span [ngClass]=\"maximized ? minimizeIcon : maximizeIcon\"></span>\r\n                        </a>\r\n                        <a *ngIf=\"closable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\r\n                            <span [class]=\"closeIcon\"></span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div #content class=\"ui-dialog-content ui-widget-content\" [ngStyle]=\"contentStyle\">\r\n                    <ng-content></ng-content>\r\n                </div>\r\n                <div #footer class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"footerFacet && footerFacet.first\">\r\n                    <ng-content select=\"p-footer\"></ng-content>\r\n                </div>\r\n                <div *ngIf=\"resizable\" class=\"ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se\" style=\"z-index: 90;\" (mousedown)=\"initResize($event)\"></div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    animations: [\r\n        trigger('animation', [\r\n            transition('void => visible', [\r\n                useAnimation(showAnimation)\r\n            ]),\r\n            transition('visible => void', [\r\n                useAnimation(hideAnimation)\r\n            ])\r\n        ])\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class Dialog implements OnDestroy {\r\n\r\n    @Input() header: string;\r\n\r\n    @Input() draggable: boolean = true;\r\n\r\n    @Input() resizable: boolean = true;\r\n\r\n\r\n    @Input() get positionLeft(): number {\r\n        return 0;\r\n    };\r\n\r\n    set positionLeft(_positionLeft: number) {\r\n        console.log(\"positionLeft property is deprecated.\");\r\n    }\r\n\r\n    @Input() get positionTop(): number {\r\n        return 0;\r\n    };\r\n\r\n    set positionTop(_positionTop: number) {\r\n        console.log(\"positionTop property is deprecated.\");\r\n    }\r\n\r\n    @Input() contentStyle: any;\r\n\r\n    @Input() modal: boolean;\r\n\r\n    @Input() closeOnEscape: boolean = true;\r\n\r\n    @Input() dismissableMask: boolean;\r\n\r\n    @Input() rtl: boolean;\r\n\r\n    @Input() closable: boolean = true;\r\n\r\n    @Input() get responsive(): boolean {\r\n        return false;\r\n    };\r\n\r\n    set responsive(_responsive: boolean) {\r\n        console.log(\"Responsive property is deprecated.\");\r\n    }\r\n\r\n    @Input() appendTo: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() maskStyleClass: string;\r\n\r\n    @Input() showHeader: boolean = true;\r\n\r\n    @Input() get breakpoint(): number {\r\n        return 649;\r\n    };\r\n\r\n    set breakpoint(_breakpoint: number) {\r\n        console.log(\"Breakpoint property is not utilized and deprecated, use CSS media queries instead.\");\r\n    }\r\n\r\n    @Input() blockScroll: boolean = false;\r\n\r\n    @Input() autoZIndex: boolean = true;\r\n\r\n    @Input() baseZIndex: number = 0;\r\n\r\n    @Input() minX: number = 0;\r\n\r\n    @Input() minY: number = 0;\r\n\r\n    @Input() focusOnShow: boolean = true;\r\n\r\n    @Input() maximizable: boolean;\r\n\r\n    @Input() keepInViewport: boolean = true;\r\n\r\n    @Input() focusTrap: boolean = true;\r\n\r\n    @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\r\n\r\n    @Input() closeIcon: string = 'pi pi-times';\r\n\r\n    @Input() minimizeIcon: string = 'pi pi-window-minimize';\r\n\r\n    @Input() maximizeIcon: string = 'pi pi-window-maximize';\r\n\r\n    @ContentChildren(Header, {descendants: false}) headerFacet: QueryList<Header>;\r\n\r\n    @ContentChildren(Footer, {descendants: false}) footerFacet: QueryList<Header>;\r\n\r\n    @ViewChild('titlebar') headerViewChild: ElementRef;\r\n\r\n    @ViewChild('content') contentViewChild: ElementRef;\r\n\r\n    @ViewChild('footer') footerViewChild: ElementRef;\r\n\r\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() visibleChange:EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onResizeInit: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n    _visible: boolean;\r\n\r\n    maskVisible: boolean;\r\n\r\n    container: HTMLDivElement;\r\n\r\n    wrapper: HTMLElement;\r\n\r\n    dragging: boolean;\r\n\r\n    documentDragListener: any;\r\n\r\n    documentDragEndListener: any;\r\n\r\n    resizing: boolean;\r\n\r\n    documentResizeListener: any;\r\n\r\n    documentResizeEndListener: any;\r\n\r\n    documentEscapeListener: Function;\r\n\r\n    maskClickListener: Function;\r\n\r\n    lastPageX: number;\r\n\r\n    lastPageY: number;\r\n\r\n    preventVisibleChangePropagation: boolean;\r\n\r\n    maximized: boolean;\r\n\r\n    preMaximizeContentHeight: number;\r\n\r\n    preMaximizeContainerWidth: number;\r\n\r\n    preMaximizeContainerHeight: number;\r\n\r\n    preMaximizePageX: number;\r\n\r\n    preMaximizePageY: number;\r\n\r\n    id: string = `ui-dialog-${idx++}`;\r\n\r\n    _style: any = {};\r\n\r\n    _position: string = \"center\";\r\n\r\n    originalStyle: any;\r\n\r\n    transformOptions: any = \"scale(0.7)\";\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2, public zone: NgZone, private cd: ChangeDetectorRef) { }\r\n\r\n    @Input() get visible(): any {\r\n        return this._visible;\r\n    }\r\n    set visible(value:any) {\r\n        this._visible = value;\r\n\r\n        if (this._visible && !this.maskVisible) {\r\n            this.maskVisible = true;\r\n        }\r\n    }\r\n\r\n    @Input() get style(): any {\r\n        return this._style;\r\n    }\r\n    set style(value:any) {\r\n        if (value) {\r\n            this._style = {...value};\r\n            this.originalStyle = value;\r\n        }\r\n    }\r\n\r\n    @Input() get position(): string {\r\n        return this._position;\r\n    };\r\n\r\n    set position(value: string) {\r\n        this._position = value;\r\n\r\n        switch (value) {\r\n            case 'topleft':\r\n            case 'bottomleft':\r\n            case 'left':\r\n                this.transformOptions = \"translate3d(-100%, 0px, 0px)\";\r\n            break;\r\n            case 'topright':\r\n            case 'bottomright':\r\n            case 'right':\r\n                this.transformOptions = \"translate3d(100%, 0px, 0px)\";\r\n            break;\r\n            case 'bottom':\r\n                this.transformOptions = \"translate3d(0px, 100%, 0px)\";\r\n            break;\r\n            case 'top':\r\n                this.transformOptions = \"translate3d(0px, -100%, 0px)\";\r\n            break;\r\n            default:\r\n                this.transformOptions = \"scale(0.7)\";\r\n            break;\r\n        }\r\n    }\r\n\r\n    focus() {\r\n        let focusable = DomHandler.findSingle(this.container, 'button');\r\n        if (focusable) {\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => focusable.focus(), 5);\r\n            });\r\n        }\r\n    }\r\n\r\n    close(event: Event) {\r\n        this.visibleChange.emit(false);\r\n        event.preventDefault();\r\n    }\r\n\r\n    enableModality() {\r\n        if (this.closable && this.dismissableMask) {\r\n            this.maskClickListener = this.renderer.listen(this.wrapper, 'click', (event: any) => {\r\n                if (!this.container.isSameNode(event.target) && !this.container.contains(event.target)) {\r\n                    this.close(event);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this.modal) {\r\n            DomHandler.addClass(document.body, 'ui-overflow-hidden');\r\n        }\r\n    }\r\n\r\n    disableModality() {\r\n        if (this.wrapper) {\r\n            if (this.dismissableMask) {\r\n                this.unbindMaskClickListener();\r\n            }\r\n\r\n            if (this.modal) {\r\n                DomHandler.removeClass(document.body, 'ui-overflow-hidden');\r\n            }\r\n\r\n            if (!(this.cd as ViewRef).destroyed) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n    }\r\n\r\n    maximize() {\r\n        this.maximized = !this.maximized;\r\n\r\n        if (!this.modal && !this.blockScroll) {\r\n            if (this.maximized)\r\n                DomHandler.addClass(document.body, 'ui-overflow-hidden');\r\n            else\r\n                DomHandler.removeClass(document.body, 'ui-overflow-hidden');\r\n        }\r\n    }\r\n\r\n    unbindMaskClickListener() {\r\n        if (this.maskClickListener) {\r\n            this.maskClickListener();\r\n            this.maskClickListener = null;\r\n        }\r\n    }\r\n\r\n    moveOnTop() {\r\n        if (this.autoZIndex) {\r\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\r\n            this.wrapper.style.zIndex = String(this.baseZIndex + (DomHandler.zindex - 1));\r\n        }\r\n    }\r\n\r\n    getMaskClass() {\r\n        let maskClass = {'ui-dialog-mask': true, 'ui-widget-overlay': this.modal, 'ui-dialog-visible': this.maskVisible, 'ui-dialog-mask-scrollblocker': this.modal || this.blockScroll};\r\n        maskClass[this.getPositionClass().toString()] = true;\r\n        return maskClass;\r\n    }\r\n\r\n    getPositionClass() {\r\n        const positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];\r\n        const pos = positions.find(item => item === this.position);\r\n\r\n        return pos ? `ui-dialog-${pos}` : '';\r\n    }\r\n\r\n    initDrag(event: MouseEvent) {\r\n        if (DomHandler.hasClass(event.target, 'ui-dialog-titlebar-icon') ||Â DomHandler.hasClass((<HTMLElement> event.target).parentElement, 'ui-dialog-titlebar-icon')) {\r\n            return;\r\n        }\r\n\r\n        if (this.draggable) {\r\n            this.dragging = true;\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n\r\n            if (!DomHandler.isIE()) {\r\n                this.container.style.position = 'fixed';\r\n            }\r\n\r\n            this.container.style.margin = '0';\r\n            DomHandler.addClass(document.body, 'ui-unselectable-text');\r\n        }\r\n    }\r\n\r\n    onKeydown(event: KeyboardEvent) {\r\n        if (this.focusTrap) {\r\n            if (event.which === 9) {\r\n                event.preventDefault();\r\n\r\n                let focusableElements = DomHandler.getFocusableElements(this.container);\r\n\r\n                if (focusableElements && focusableElements.length > 0) {\r\n                    if (!document.activeElement) {\r\n                        focusableElements[0].focus();\r\n                    }\r\n                    else {\r\n                        let focusedIndex = focusableElements.indexOf(document.activeElement);\r\n\r\n                        if (event.shiftKey) {\r\n                            if (focusedIndex == -1 || focusedIndex === 0)\r\n                                focusableElements[focusableElements.length - 1].focus();\r\n                            else\r\n                                focusableElements[focusedIndex - 1].focus();\r\n                        }\r\n                        else {\r\n                            if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\r\n                                focusableElements[0].focus();\r\n                            else\r\n                                focusableElements[focusedIndex + 1].focus();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onDrag(event: MouseEvent) {\r\n        if (this.dragging) {\r\n            let containerWidth = DomHandler.getOuterWidth(this.container);\r\n            let containerHeight = DomHandler.getOuterHeight(this.container);\r\n            let deltaX = event.pageX - this.lastPageX;\r\n            let deltaY = event.pageY - this.lastPageY;\r\n            let offset = DomHandler.getOffset(this.container);\r\n            let leftPos = offset.left + deltaX;\r\n            let topPos = offset.top + deltaY;\r\n            let viewport = DomHandler.getViewport();\r\n\r\n            if (this.keepInViewport) {\r\n                if (leftPos >= this.minX && (leftPos + containerWidth) < viewport.width) {\r\n                    this._style.left = leftPos + 'px';\r\n                    this.lastPageX = event.pageX;\r\n                    this.container.style.left = leftPos + 'px';\r\n                }\r\n\r\n                if (topPos >= this.minY && (topPos + containerHeight) < viewport.height) {\r\n                    this._style.top = topPos + 'px';\r\n                    this.lastPageY = event.pageY;\r\n                    this.container.style.top = topPos + 'px';\r\n                }\r\n            }\r\n            else {\r\n                this.lastPageX = event.pageX;\r\n                this.container.style.left = leftPos + 'px';\r\n                this.lastPageY = event.pageY;\r\n                this.container.style.top = topPos + 'px';\r\n            }\r\n\r\n            if (DomHandler.isIE() && this.container.style.position != 'fixed' && this.container.style.top && this.container.style.left) {\r\n                this.container.style.position = 'fixed';\r\n            }\r\n        }\r\n    }\r\n\r\n    endDrag(event: MouseEvent) {\r\n        if (this.draggable) {\r\n            this.dragging = false;\r\n            DomHandler.removeClass(document.body, 'ui-unselectable-text');\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    resetPosition() {\r\n        this.container.style.left = '';\r\n        this.container.style.top = '';\r\n        this.container.style.margin = '';\r\n    }\r\n\r\n    initResize(event: MouseEvent) {\r\n        if (this.resizable) {\r\n            this.resizing = true;\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n            DomHandler.addClass(document.body, 'ui-unselectable-text');\r\n            this.onResizeInit.emit(event);\r\n        }\r\n    }\r\n\r\n    onResize(event: MouseEvent) {\r\n        if (this.resizing) {\r\n            let deltaX = event.pageX - this.lastPageX;\r\n            let deltaY = event.pageY - this.lastPageY;\r\n            let containerWidth = DomHandler.getOuterWidth(this.container);\r\n            let containerHeight = DomHandler.getOuterHeight(this.container);\r\n            let contentHeight = DomHandler.getOuterHeight(this.contentViewChild.nativeElement);\r\n            let newWidth = containerWidth + deltaX;\r\n            let newHeight = containerHeight + deltaY;\r\n            let minWidth = this.container.style.minWidth;\r\n            let minHeight = this.container.style.minHeight;\r\n            let offset = DomHandler.getOffset(this.container);\r\n            let viewport = DomHandler.getViewport();\r\n\r\n            if ((!minWidth || newWidth > parseInt(minWidth)) && (offset.left + newWidth) < viewport.width) {\r\n                this._style.width = newWidth + 'px';\r\n                this.container.style.width = this._style.width;\r\n            }\r\n\r\n            if ((!minHeight || newHeight > parseInt(minHeight)) && (offset.top + newHeight) < viewport.height) {\r\n                this.contentViewChild.nativeElement.style.height = contentHeight + deltaY + 'px';\r\n            }\r\n\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n        }\r\n    }\r\n\r\n    resizeEnd(event) {\r\n        if (this.resizing) {\r\n            this.resizing = false;\r\n            DomHandler.removeClass(document.body, 'ui-unselectable-text');\r\n            this.onResizeEnd.emit(event);\r\n        }\r\n    }\r\n\r\n    bindGlobalListeners() {\r\n        if (this.draggable) {\r\n            this.bindDocumentDragListener();\r\n            this.bindDocumentDragEndListener();\r\n        }\r\n\r\n        if (this.resizable) {\r\n            this.bindDocumentResizeListeners();\r\n        }\r\n\r\n        if (this.closeOnEscape && this.closable) {\r\n            this.bindDocumentEscapeListener();\r\n        }\r\n    }\r\n\r\n    unbindGlobalListeners() {\r\n        this.unbindDocumentDragListener();\r\n        this.unbindDocumentDragEndListener();\r\n        this.unbindDocumentResizeListeners();\r\n        this.unbindDocumentEscapeListener();\r\n    }\r\n\r\n    bindDocumentDragListener() {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.documentDragListener = this.onDrag.bind(this);\r\n            window.document.addEventListener('mousemove', this.documentDragListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentDragListener() {\r\n        if (this.documentDragListener) {\r\n            window.document.removeEventListener('mousemove', this.documentDragListener);\r\n            this.documentDragListener = null;\r\n        }\r\n    }\r\n\r\n    bindDocumentDragEndListener() {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.documentDragEndListener = this.endDrag.bind(this);\r\n            window.document.addEventListener('mouseup', this.documentDragEndListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentDragEndListener() {\r\n        if (this.documentDragEndListener) {\r\n            window.document.removeEventListener('mouseup', this.documentDragEndListener);\r\n            this.documentDragEndListener = null;\r\n        }\r\n    }\r\n\r\n    bindDocumentResizeListeners() {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.documentResizeListener = this.onResize.bind(this);\r\n            this.documentResizeEndListener = this.resizeEnd.bind(this);\r\n            window.document.addEventListener('mousemove', this.documentResizeListener);\r\n            window.document.addEventListener('mouseup', this.documentResizeEndListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentResizeListeners() {\r\n        if (this.documentResizeListener && this.documentResizeEndListener) {\r\n            window.document.removeEventListener('mousemove', this.documentResizeListener);\r\n            window.document.removeEventListener('mouseup', this.documentResizeEndListener);\r\n            this.documentResizeListener = null;\r\n            this.documentResizeEndListener = null;\r\n        }\r\n    }\r\n\r\n    bindDocumentEscapeListener() {\r\n        this.documentEscapeListener = this.renderer.listen('document', 'keydown', (event) => {\r\n            if (event.which == 27) {\r\n                if (parseInt(this.container.style.zIndex) === (DomHandler.zindex + this.baseZIndex)) {\r\n                    this.close(event);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    unbindDocumentEscapeListener() {\r\n        if (this.documentEscapeListener) {\r\n            this.documentEscapeListener();\r\n            this.documentEscapeListener = null;\r\n        }\r\n    }\r\n\r\n    appendContainer() {\r\n        if (this.appendTo) {\r\n            if (this.appendTo === 'body')\r\n                document.body.appendChild(this.wrapper);\r\n            else\r\n                DomHandler.appendChild(this.wrapper, this.appendTo);\r\n        }\r\n    }\r\n\r\n    restoreAppend() {\r\n        if (this.container && this.appendTo) {\r\n            this.el.nativeElement.appendChild(this.wrapper);\r\n        }\r\n    }\r\n\r\n    onAnimationStart(event: AnimationEvent) {\r\n        switch(event.toState) {\r\n            case 'visible':\r\n                this.container = event.element;\r\n                this.wrapper = this.container.parentElement;\r\n                this.onShow.emit({});\r\n                this.appendContainer();\r\n                this.moveOnTop();\r\n                this.bindGlobalListeners();\r\n\r\n                if (this.modal) {\r\n                    this.enableModality();\r\n                }\r\n\r\n                if (!this.modal && this.blockScroll) {\r\n                    DomHandler.addClass(document.body, 'ui-overflow-hidden');\r\n                }\r\n\r\n                if (this.focusOnShow) {\r\n                    this.focus();\r\n                }\r\n            break;\r\n        }\r\n    }\r\n\r\n    onAnimationEnd(event: AnimationEvent) {\r\n        switch(event.toState) {\r\n            case 'void':\r\n                this.onContainerDestroy();\r\n                this.onHide.emit({});\r\n            break;\r\n        }\r\n    }\r\n\r\n    onContainerDestroy() {\r\n        this.unbindGlobalListeners();\r\n        this.dragging = false;\r\n\r\n        this.maskVisible = false;\r\n\r\n        if (this.maximized) {\r\n            DomHandler.removeClass(document.body, 'ui-overflow-hidden');\r\n            this.maximized = false;\r\n        }\r\n\r\n        if (this.modal) {\r\n            this.disableModality();\r\n        }\r\n\r\n        if (this.blockScroll) {\r\n            DomHandler.removeClass(document.body, 'ui-overflow-hidden');\r\n        }\r\n\r\n        this.container = null;\r\n        this.wrapper = null;\r\n\r\n        this._style = this.originalStyle ? {...this.originalStyle} : {};\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.container) {\r\n            this.restoreAppend();\r\n            this.onContainerDestroy();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,FocusTrapModule],\r\n    exports: [Dialog,SharedModule],\r\n    declarations: [Dialog]\r\n})\r\nexport class DialogModule { }\r\n"]}