{"version":3,"file":"primeng-togglebutton.umd.js","sources":["ng://primeng/togglebutton/togglebutton.ts"],"sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,AfterViewInit,ViewChild,ElementRef,ChangeDetectionStrategy} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\n\r\nexport const TOGGLEBUTTON_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ToggleButton),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-toggleButton',\r\n    template: `\r\n        <div [ngClass]=\"{'ui-button ui-togglebutton ui-widget ui-state-default ui-corner-all': true, 'ui-button-text-only': (!onIcon && !offIcon), \r\n                'ui-button-text-icon-left': (onIcon && offIcon && hasOnLabel && hasOffLabel && iconPos === 'left'), \r\n                'ui-button-text-icon-right': (onIcon && offIcon && hasOnLabel && hasOffLabel && iconPos === 'right'),'ui-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),\r\n                'ui-state-active': checked,'ui-state-focus':focus,'ui-state-disabled':disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\" \r\n                (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\">\r\n            <div class=\"ui-helper-hidden-accessible\">\r\n                <input #checkbox type=\"checkbox\" [attr.id]=\"inputId\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [attr.tabindex]=\"tabindex\"\r\n                    role=\"button\" [attr.aria-pressed]=\"checked\" [attr.aria-labelledby]=\"ariaLabelledBy\">\r\n            </div>\r\n            <span *ngIf=\"onIcon||offIcon\" class=\"ui-button-icon-left\" [class]=\"checked ? this.onIcon : this.offIcon\" [ngClass]=\"{'ui-button-icon-left': (iconPos === 'left'), \r\n            'ui-button-icon-right': (iconPos === 'right')}\"></span>\r\n            <span class=\"ui-button-text ui-unselectable-text\">{{checked ? hasOnLabel ? onLabel : 'ui-btn' : hasOffLabel ? offLabel : 'ui-btn'}}</span>\r\n        </div>\r\n    `,\r\n    providers: [TOGGLEBUTTON_VALUE_ACCESSOR],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class ToggleButton implements ControlValueAccessor,AfterViewInit {\r\n\r\n    @Input() onLabel: string = 'Yes';\r\n\r\n    @Input() offLabel: string = 'No';\r\n\r\n    @Input() onIcon: string;\r\n\r\n    @Input() offIcon: string;\r\n\r\n    @Input() ariaLabelledBy: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Input() iconPos: string = 'left';\r\n\r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @ViewChild('checkbox') checkboxViewChild: ElementRef;\r\n    \r\n    checkbox: HTMLInputElement;\r\n    \r\n    checked: boolean = false;\r\n\r\n    focus: boolean = false;\r\n    \r\n    onModelChange: Function = () => {};\r\n    \r\n    onModelTouched: Function = () => {};\r\n    \r\n    ngAfterViewInit() {\r\n        if (this.checkboxViewChild){\r\n            this.checkbox = <HTMLInputElement> this.checkboxViewChild.nativeElement;\r\n        }\r\n    }\r\n    \r\n    toggle(event: Event) {\r\n        if (!this.disabled) {\r\n            this.checked = !this.checked;\r\n            this.onModelChange(this.checked);\r\n            this.onModelTouched();\r\n            this.onChange.emit({\r\n                originalEvent: event,\r\n                checked: this.checked\r\n            });\r\n            if (this.checkbox) {\r\n                this.checkbox.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    onFocus() {\r\n        this.focus = true;\r\n    }\r\n    \r\n    onBlur() {\r\n        this.focus = false;\r\n        this.onModelTouched();\r\n    }\r\n    \r\n    writeValue(value: any) : void {\r\n        this.checked = value;\r\n    }\r\n    \r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n    }\r\n    \r\n    get hasOnLabel():boolean {\r\n        return this.onLabel && this.onLabel.length > 0;\r\n    }\r\n    \r\n    get hasOffLabel():boolean {\r\n        return this.onLabel && this.onLabel.length > 0;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [ToggleButton],\r\n    declarations: [ToggleButton]\r\n})\r\nexport class ToggleButtonModule { }\r\n"],"names":["NG_VALUE_ACCESSOR","forwardRef","EventEmitter","Input","Output","ViewChild","Component","ChangeDetectionStrategy","NgModule","CommonModule"],"mappings":"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"}