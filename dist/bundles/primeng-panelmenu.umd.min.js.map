{"version":3,"sources":["ng://primeng/panelmenu/panelmenu.ts"],"names":["BasePanelMenuItem","ref","this","prototype","handleClick","event","item","disabled","preventDefault","expanded","detectChanges","url","command","originalEvent","PanelMenuSub","_super","call","__extends","ChangeDetectorRef","__decorate","Input","Component","selector","template","animations","trigger","state","style","height","params","transition","animate","PanelMenu","_this","multiple","transitionOptions","collapseAll","_b","__values","model","_c","next","done","value","modelItem","animating","onToggleDone","changeDetection","ChangeDetectionStrategy","Default","PanelMenuModule","NgModule","imports","CommonModule","RouterModule","exports","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,ChangeDetectorRef,ChangeDetectionStrategy} from '@angular/core';\r\nimport {trigger,state,style,transition,animate} from '@angular/animations';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {RouterModule} from '@angular/router';\r\n\r\nexport class BasePanelMenuItem {\r\n\r\n    constructor(private ref: ChangeDetectorRef) {}\r\n        \r\n    handleClick(event, item) {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        \r\n        item.expanded = !item.expanded;\r\n        this.ref.detectChanges();\r\n        \r\n        if (!item.url) {\r\n            event.preventDefault();\r\n        }\r\n                   \r\n        if (item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-panelMenuSub',\r\n    template: `\r\n        <ul class=\"ui-submenu-list\" [@submenu]=\"expanded ? {value: 'visible', params: {transitionParams: transitionOptions, height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\" role=\"tree\">\r\n            <ng-template ngFor let-child [ngForOf]=\"item.items\">\r\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" role=\"separator\">\r\n                <li *ngIf=\"!child.separator\" class=\"ui-menuitem ui-corner-all\" [ngClass]=\"child.styleClass\" [class.ui-helper-hidden]=\"child.visible === false\" [ngStyle]=\"child.style\">\r\n                    <a *ngIf=\"!child.routerLink\" [href]=\"child.url||'#'\" class=\"ui-menuitem-link ui-corner-all\" [attr.tabindex]=\"item.expanded ? null : child.tabindex ? child.tabindex : '-1'\" [attr.id]=\"child.id\"\r\n                        [ngClass]=\"{'ui-state-disabled':child.disabled, 'ui-state-active': child.expanded}\" role=\"treeitem\" [attr.aria-expanded]=\"child.expanded\"\r\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\">\r\n                        <span class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-right':!child.expanded,'pi-caret-down':child.expanded}\" *ngIf=\"child.items\"></span\r\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\r\n                        ><span class=\"ui-menuitem-text\">{{child.label}}</span>\r\n                    </a>\r\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\" class=\"ui-menuitem-link ui-corner-all\" \r\n                        [ngClass]=\"{'ui-state-disabled':child.disabled}\" [attr.tabindex]=\"item.expanded ? null : child.tabindex ? child.tabindex : '-1'\" [attr.id]=\"child.id\" role=\"treeitem\" [attr.aria-expanded]=\"child.expanded\"\r\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\"\r\n                        [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\r\n                        <span class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-right':!child.expanded,'pi-caret-down':child.expanded}\" *ngIf=\"child.items\"></span\r\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\r\n                        ><span class=\"ui-menuitem-text\">{{child.label}}</span>\r\n                    </a>\r\n                    <p-panelMenuSub [item]=\"child\" [expanded]=\"child.expanded\" [transitionOptions]=\"transitionOptions\" *ngIf=\"child.items\"></p-panelMenuSub>\r\n                </li>\r\n            </ng-template>\r\n        </ul>\r\n    `,\r\n    animations: [\r\n        trigger('submenu', [\r\n            state('hidden', style({\r\n                height: '0px'\r\n            })),\r\n            state('void', style({\r\n                height: '{{height}}'\r\n            }), {params: {height: '0'}}),\r\n            state('visible', style({\r\n                height: '*'\r\n            })),\r\n            transition('visible => hidden', animate('{{transitionParams}}')),\r\n            transition('hidden => visible', animate('{{transitionParams}}')),\r\n            transition('void => hidden', animate('{{transitionParams}}')),\r\n            transition('void => visible', animate('{{transitionParams}}'))\r\n        ])\r\n    ]\r\n})\r\nexport class PanelMenuSub extends BasePanelMenuItem {\r\n    \r\n    @Input() item: MenuItem;\r\n    \r\n    @Input() expanded: boolean;\r\n\r\n    @Input() transitionOptions: string;\r\n\r\n    constructor(ref: ChangeDetectorRef) {\r\n        super(ref);\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-panelMenu',\r\n    template: `\r\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'ui-panelmenu ui-widget'\">\r\n            <ng-container *ngFor=\"let item of model;let f=first;let l=last;\">\r\n                <div class=\"ui-panelmenu-panel\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\">\r\n                    <div [ngClass]=\"{'ui-widget ui-panelmenu-header ui-state-default':true,'ui-corner-top':f,'ui-corner-bottom':l&&!item.expanded,\r\n                    'ui-state-active':item.expanded,'ui-state-disabled':item.disabled}\" [class]=\"item.styleClass\" [ngStyle]=\"item.style\">\r\n                        <a *ngIf=\"!item.routerLink\" [href]=\"item.url||'#'\" (click)=\"handleClick($event,item)\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\" [attr.id]=\"item.id\"\r\n                           [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"ui-panelmenu-header-link\" [attr.aria-expanded]=\"item.expanded\" [attr.id]=\"item.id + '_header'\" [attr.aria-controls]=\"item.id +'_content'\">\r\n                        <span *ngIf=\"item.items\" class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\r\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\r\n                        ><span class=\"ui-menuitem-text\">{{item.label}}</span>\r\n                        </a>\r\n                        <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\"\r\n                           (click)=\"handleClick($event,item)\" [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"ui-panelmenu-header-link\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\r\n                           [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\">\r\n                        <span *ngIf=\"item.items\" class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\r\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\r\n                        ><span class=\"ui-menuitem-text\">{{item.label}}</span>\r\n                        </a>\r\n                    </div>\r\n                    <div *ngIf=\"item.items\" class=\"ui-panelmenu-content-wrapper\" [@rootItem]=\"item.expanded ? {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\"  (@rootItem.done)=\"onToggleDone()\"\r\n                         [ngClass]=\"{'ui-panelmenu-content-wrapper-overflown': !item.expanded||animating}\">\r\n                        <div class=\"ui-panelmenu-content ui-widget-content\" role=\"region\" [attr.id]=\"item.id +'_content' \" [attr.aria-labelledby]=\"item.id +'_header'\">\r\n                            <p-panelMenuSub [item]=\"item\" [expanded]=\"true\" [transitionOptions]=\"transitionOptions\" class=\"ui-panelmenu-root-submenu\"></p-panelMenuSub>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    `,\r\n    animations: [\r\n        trigger('rootItem', [\r\n            state('hidden', style({\r\n                height: '0px'\r\n            })),\r\n            state('void', style({\r\n                height: '{{height}}'\r\n            }), {params: {height: '0'}}),\r\n            state('visible', style({\r\n                height: '*'\r\n            })),\r\n            transition('visible => hidden', animate('{{transitionParams}}')),\r\n            transition('hidden => visible', animate('{{transitionParams}}')),\r\n            transition('void => hidden', animate('{{transitionParams}}')),\r\n            transition('void => visible', animate('{{transitionParams}}'))\r\n        ])\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class PanelMenu extends BasePanelMenuItem {\r\n    \r\n    @Input() model: MenuItem[];\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() multiple: boolean = true;\r\n\r\n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\r\n    \r\n    public animating: boolean;\r\n\r\n    constructor(ref: ChangeDetectorRef) {\r\n        super(ref);\r\n    }\r\n                \r\n    collapseAll() {\r\n    \tfor(let item of this.model) {\r\n    \t\tif (item.expanded) {\r\n    \t\t\titem.expanded = false;\r\n    \t\t}\r\n    \t}\r\n    }\r\n\r\n    handleClick(event, item) {\r\n    \tif (!this.multiple) {\r\n            for(let modelItem of this.model) {\r\n        \t\tif (item !== modelItem && modelItem.expanded) {\r\n        \t\t\tmodelItem.expanded = false;\r\n        \t\t}\r\n        \t}\r\n    \t}\r\n        \r\n        this.animating = true;\r\n        super.handleClick(event, item);\r\n    }\r\n    \r\n    onToggleDone() {\r\n        this.animating = false;\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,RouterModule],\r\n    exports: [PanelMenu,RouterModule],\r\n    declarations: [PanelMenu,PanelMenuSub]\r\n})\r\nexport class PanelMenuModule { }\r\n"]}