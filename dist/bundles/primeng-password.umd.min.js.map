{"version":3,"sources":["ng://primeng/password/password.ts"],"names":["Password","el","zone","this","promptLabel","weakLabel","mediumLabel","strongLabel","feedback","Object","defineProperty","prototype","show","nativeElement","type","ngDoCheck","updateFilledState","onInput","e","filled","value","length","createPanel","panel","document","createElement","className","meter","info","textContent","appendChild","style","minWidth","DomHandler","getOuterWidth","body","onFocus","_this","zIndex","String","zindex","runOutsideAngular","setTimeout","addClass","removeClass","absolutePosition","onBlur","ngOnDestroy","onKeyup","target","label","meterPos","score","testStrength","backgroundPosition","str","val","grade","match","normalize","x","y","disabled","removeChild","ElementRef","NgZone","__decorate","Input","HostListener","Directive","selector","host","[class.ui-inputtext]","[class.ui-corner-all]","[class.ui-state-default]","[class.ui-widget]","[class.ui-state-filled]","PasswordModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,OnDestroy,DoCheck,NgZone} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from 'primeng/dom';\r\n\r\n@Directive({\r\n    selector: '[pPassword]',\r\n    host: {\r\n        '[class.ui-inputtext]': 'true',\r\n        '[class.ui-corner-all]': 'true',\r\n        '[class.ui-state-default]': 'true',\r\n        '[class.ui-widget]': 'true',\r\n        '[class.ui-state-filled]': 'filled'\r\n    }\r\n})\r\nexport class Password implements OnDestroy,DoCheck {\r\n\r\n    @Input() promptLabel: string = 'Enter a password';\r\n\r\n    @Input() weakLabel: string = 'Weak';\r\n\r\n    @Input() mediumLabel: string = 'Medium';\r\n\r\n    @Input() strongLabel: string = 'Strong';\r\n    \r\n    @Input() feedback: boolean = true;\r\n\r\n    @Input() set showPassword(show: boolean) {\r\n        this.el.nativeElement.type = show ? 'text' : 'password';\r\n    }\r\n    \r\n    panel: HTMLDivElement;\r\n    \r\n    meter: any;\r\n    \r\n    info: any;\r\n    \r\n    filled: boolean;\r\n    \r\n    constructor(public el: ElementRef, public zone: NgZone) {}\r\n    \r\n    ngDoCheck() {\r\n        this.updateFilledState();\r\n    }\r\n    \r\n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\r\n    @HostListener('input', ['$event']) \r\n    onInput(e) {\r\n        this.updateFilledState();\r\n    }\r\n    \r\n    updateFilledState() {\r\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\r\n    }\r\n\r\n    createPanel() {\r\n        this.panel = document.createElement('div');\r\n        this.panel.className = 'ui-password-panel ui-widget ui-state-highlight ui-corner-all';\r\n        this.meter = document.createElement('div');\r\n        this.meter.className = 'ui-password-meter';\r\n        this.info = document.createElement('div');\r\n        this.info.className = 'ui-password-info';\r\n        this.info.textContent = this.promptLabel;\r\n        this.panel.appendChild(this.meter);\r\n        this.panel.appendChild(this.info);\r\n        this.panel.style.minWidth = DomHandler.getOuterWidth(this.el.nativeElement) + 'px';\r\n        document.body.appendChild(this.panel);\r\n    }\r\n        \r\n    @HostListener('focus', ['$event']) \r\n    onFocus(e) {\r\n        if (this.feedback) {\r\n            if (!this.panel) {\r\n                this.createPanel();\r\n            }\r\n    \r\n            this.panel.style.zIndex = String(++DomHandler.zindex);\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    DomHandler.addClass(this.panel, 'ui-password-panel-visible');\r\n                    DomHandler.removeClass(this.panel, 'ui-password-panel-hidden');\r\n                }, 1);\r\n                DomHandler.absolutePosition(this.panel, this.el.nativeElement);\r\n            });\r\n        }\r\n    }\r\n    \r\n    @HostListener('blur', ['$event']) \r\n    onBlur(e) {   \r\n        if (this.feedback) {\r\n            DomHandler.addClass(this.panel, 'ui-password-panel-hidden');\r\n            DomHandler.removeClass(this.panel, 'ui-password-panel-visible');\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    this.ngOnDestroy();\r\n                }, 150);\r\n            });\r\n        }     \r\n    }\r\n    \r\n    @HostListener('keyup', ['$event'])\r\n    onKeyup(e) {\r\n        if (this.feedback) {\r\n            let value = e.target.value,\r\n            label = null,\r\n            meterPos = null;\r\n\r\n            if (value.length === 0) {\r\n                label = this.promptLabel;\r\n                meterPos = '0px 0px';\r\n            }\r\n            else {\r\n                var score = this.testStrength(value);\r\n\r\n                if (score < 30) {\r\n                    label = this.weakLabel;\r\n                    meterPos = '0px -10px';\r\n                }\r\n                else if (score >= 30 && score < 80) {\r\n                    label = this.mediumLabel;\r\n                    meterPos = '0px -20px';\r\n                } \r\n                else if (score >= 80) {\r\n                    label = this.strongLabel;\r\n                    meterPos = '0px -30px';\r\n                }\r\n            }\r\n\r\n            this.meter.style.backgroundPosition = meterPos;\r\n            this.info.textContent = label;\r\n        }\r\n    }\r\n    \r\n    testStrength(str: string) {\r\n        let grade: number = 0;\r\n        let val;\r\n\r\n        val = str.match('[0-9]');\r\n        grade += this.normalize(val ? val.length : 1/4, 1) * 25;\r\n\r\n        val = str.match('[a-zA-Z]');\r\n        grade += this.normalize(val ? val.length : 1/2, 3) * 10;\r\n\r\n        val = str.match('[!@#$%^&*?_~.,;=]');\r\n        grade += this.normalize(val ? val.length : 1/6, 1) * 35;\r\n\r\n        val = str.match('[A-Z]');\r\n        grade += this.normalize(val ? val.length : 1/6, 1) * 30;\r\n\r\n        grade *= str.length / 8;\r\n\r\n        return grade > 100 ? 100 : grade;\r\n    }\r\n    \r\n    normalize(x, y) {\r\n        let diff = x - y;\r\n\r\n        if (diff <= 0)\r\n            return x / y;\r\n        else\r\n            return 1 + 0.5 * (x / (x + y/4));\r\n    }\r\n    \r\n    get disabled(): boolean {\r\n        return this.el.nativeElement.disabled;\r\n    }\r\n    \r\n    ngOnDestroy() {\r\n        if (this.panel) {\r\n            document.body.removeChild(this.panel);\r\n            this.panel = null;\r\n            this.meter = null;\r\n            this.info = null;\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Password],\r\n    declarations: [Password]\r\n})\r\nexport class PasswordModule { }\r\n"]}